cscope 15 $HOME/test_ws/src/rikibot_kcf               0000118348
	@src/ffttools.hpp

36 #¥agm®
⁄˚


40 #i‚de‡
_OPENCV_FFTTOOLS_HPP_


41 
	#_OPENCV_FFTTOOLS_HPP_


	)

49 
«me•a˚
 
	gFFTToﬁs


52 
	gcv
::
M©
 
f·d
(
cv
::M© 
img
, 
boﬁ
 
backw¨ds
 = 
Ál£
);

53 
	gcv
::
M©
 
ªÆ
(
cv
::M© 
img
);

54 
	gcv
::
M©
 
imag
(
cv
::M© 
img
);

55 
	gcv
::
M©
 
magnôude
(
cv
::M© 
img
);

56 
	gcv
::
M©
 
com∂exMu…ùliˇti⁄
(
cv
::M© 
a
, cv::M© 
b
);

57 
	gcv
::
M©
 
com∂exDivisi⁄
(
cv
::M© 
a
, cv::M© 
b
);

58 
ª¨ønge
(
cv
::
M©
 &
img
);

59 
n‹mÆizedLogTønsf‹m
(
cv
::
M©
 &
img
);

62 
	gcv
::
M©
 
f·d
(
cv
::M© 
img
, 
boﬁ
 
backw¨ds
)

112 i‡(
	gimg
.
ch™√ls
() == 1)

114 
cv
::
M©
 
∂™es
[] = {cv::
M©_
<> (
img
), cv::M©_<>::
zîos
(img.
size
())};

116 
	gcv
::
mîge
(
∂™es
, 2, 
img
);

118 
	gcv
::
d·
(
img
, img, 
backw¨ds
 ? (
cv
::
DFT_INVERSE
 | cv::
DFT_SCALE
) : 0 );

120  
	gimg
;

126 
	gcv
::
M©
 
ªÆ
(
cv
::M© 
img
)

128 
°d
::
ve˘‹
<
cv
::
M©
> 
∂™es
;

129 
	gcv
::
•lô
(
img
, 
∂™es
);

130  
	g∂™es
[0];

133 
	gcv
::
M©
 
imag
(
cv
::M© 
img
)

135 
°d
::
ve˘‹
<
cv
::
M©
> 
∂™es
;

136 
	gcv
::
•lô
(
img
, 
∂™es
);

137  
	g∂™es
[1];

140 
	gcv
::
M©
 
magnôude
(
cv
::M© 
img
)

142 
cv
::
M©
 
ªs
;

143 
	g°d
::
ve˘‹
<
cv
::
M©
> 
∂™es
;

144 
	gcv
::
•lô
(
img
, 
∂™es
);

145 i‡(
	g∂™es
.
size
(Ë=1Ë
ªs
 = 
cv
::
abs
(
img
);

146 i‡(
	g∂™es
.
size
(Ë=2Ë
cv
::
magnôude
(
∂™es
[0],Öœ√s[1], 
ªs
);

147 
as£π
(0);

148  
	gªs
;

151 
	gcv
::
M©
 
com∂exMu…ùliˇti⁄
(
cv
::M© 
a
, cv::M© 
b
)

153 
°d
::
ve˘‹
<
cv
::
M©
> 
∑
;

154 
	g°d
::
ve˘‹
<
cv
::
M©
> 
pb
;

155 
	gcv
::
•lô
(
a
, 
∑
);

156 
	gcv
::
•lô
(
b
, 
pb
);

158 
	g°d
::
ve˘‹
<
cv
::
M©
> 
¥es
;

159 
	g¥es
.
push_back
(
∑
[0].
mul
(
pb
[0]) -Öa[1].mul(pb[1]));

160 
	g¥es
.
push_back
(
∑
[0].
mul
(
pb
[1]) +Öa[1].mul(pb[0]));

162 
	gcv
::
M©
 
ªs
;

163 
	gcv
::
mîge
(
¥es
, 
ªs
);

165  
	gªs
;

168 
	gcv
::
M©
 
com∂exDivisi⁄
(
cv
::M© 
a
, cv::M© 
b
)

170 
°d
::
ve˘‹
<
cv
::
M©
> 
∑
;

171 
	g°d
::
ve˘‹
<
cv
::
M©
> 
pb
;

172 
	gcv
::
•lô
(
a
, 
∑
);

173 
	gcv
::
•lô
(
b
, 
pb
);

175 
	gcv
::
M©
 
divis‹
 = 1. / (
pb
[0].
mul
(pb[0]) +Öb[1].mul(pb[1]));

177 
	g°d
::
ve˘‹
<
cv
::
M©
> 
¥es
;

179 
	g¥es
.
push_back
((
∑
[0].
mul
(
pb
[0]Ë+Öa[1].mul’b[1])).mul(
divis‹
));

180 
	g¥es
.
push_back
((
∑
[1].
mul
(
pb
[0]Ë+Öa[0].mul’b[1])).mul(
divis‹
));

182 
	gcv
::
M©
 
ªs
;

183 
	gcv
::
mîge
(
¥es
, 
ªs
);

184  
	gªs
;

187 
ª¨ønge
(
cv
::
M©
 &
img
)

190 
cx
 = 
img
.
cﬁs
 / 2;

191 
	gcy
 = 
img
.
rows
 / 2;

193 
	gcv
::
M©
 
q0
(
img
, 
cv
::
Re˘
(0, 0, 
cx
, 
cy
));

194 
	gcv
::
M©
 
q1
(
img
, 
cv
::
Re˘
(
cx
, 0, cx, 
cy
));

195 
	gcv
::
M©
 
q2
(
img
, 
cv
::
Re˘
(0, 
cy
, 
cx
, cy));

196 
	gcv
::
M©
 
q3
(
img
, 
cv
::
Re˘
(
cx
, 
cy
, cx, cy));

198 
	gcv
::
M©
 
tmp
;

199 
	gq0
.
c›yTo
(
tmp
);

200 
	gq3
.
c›yTo
(
q0
);

201 
	gtmp
.
c›yTo
(
q3
);

202 
	gq1
.
c›yTo
(
tmp
);

203 
	gq2
.
c›yTo
(
q1
);

204 
	gtmp
.
c›yTo
(
q2
);

229 
n‹mÆizedLogTønsf‹m
(
cv
::
M©
 &
img
)

231 
img
 = 
cv
::
abs
(img);

232 
	gimg
 +
cv
::
Sˇœr
::
Æl
(1);

233 
	gcv
::
log
(
img
, img);

	@src/fhog.cpp

49 
	~"fhog.hµ
"

52 #ifde‡
HAVE_TBB


53 
	~<tbb/tbb.h
>

54 
	~"tbb/∑øŒñ_f‹.h
"

55 
	~"tbb/blocked_ønge.h
"

58 #i‚de‡
max


59 
	#max
(
a
,
b
Ë((◊Ë> (b)Ë? (aË: (b))

	)

62 #i‚de‡
mö


63 
	#mö
(
a
,
b
Ë((◊Ë< (b)Ë? (aË: (b))

	)

80 
	$gëFótuªM≠s
(c⁄° 
I∂Image
* 
image
, c⁄° 
k
, 
CvLSVMFótuªM≠Caskade
 **
m≠
)

82 
sizeX
, 
sizeY
;

83 
p
, 
px
, 
°rögSize
;

84 
height
, 
width
, 
numCh™√ls
;

85 
i
, 
j
, 
kk
, 
c
, 
ii
, 
jj
, 
d
;

86 * 
d©adx
, * 
d©ady
;

88 
ch
;

89 
magnôude
, 
x
, 
y
, 
tx
, 
ty
;

91 
I∂Image
 * 
dx
, * 
dy
;

92 *
√¨e°
;

93 *
w
, 
a_x
, 
b_x
;

95 
kî√l
[3] = {-1.f, 0.f, 1.f};

96 
CvM©
 
kî√l_dx
 = 
	`cvM©
(1, 3, 
CV_32F
, 
kî√l
);

97 
CvM©
 
kî√l_dy
 = 
	`cvM©
(3, 1, 
CV_32F
, 
kî√l
);

99 * 
r
;

100 * 
ÆÁ
;

102 
bound¨y_x
[
NUM_SECTOR
 + 1];

103 
bound¨y_y
[
NUM_SECTOR
 + 1];

104 
max
, 
dŸProd
;

105 
maxi
;

107 
height
 = 
image
->height;

108 
width
 = 
image
->width ;

110 
numCh™√ls
 = 
image
->
nCh™√ls
;

112 
dx
 = 
	`cvCª©eImage
(
	`cvSize
(
image
->
width
, image->
height
),

113 
IPL_DEPTH_32F
, 3);

114 
dy
 = 
	`cvCª©eImage
(
	`cvSize
(
image
->
width
, image->
height
),

115 
IPL_DEPTH_32F
, 3);

117 
sizeX
 = 
width
 / 
k
;

118 
sizeY
 = 
height
 / 
k
;

119 
px
 = 3 * 
NUM_SECTOR
;

120 
p
 = 
px
;

121 
°rögSize
 = 
sizeX
 * 
p
;

122 
	`ÆlocFótuªM≠Obje˘
(
m≠
, 
sizeX
, 
sizeY
, 
p
);

124 
	`cvFûãr2D
(
image
, 
dx
, &
kî√l_dx
, 
	`cvPoöt
(-1, 0));

125 
	`cvFûãr2D
(
image
, 
dy
, &
kî√l_dy
, 
	`cvPoöt
(0, -1));

127 
¨g_ve˘‹
;

128 
i
 = 0; i <
NUM_SECTOR
; i++)

130 
¨g_ve˘‹
 = ( (Ë
i
 ) * ( ()(
PI
Ë/ ()(
NUM_SECTOR
) );

131 
bound¨y_x
[
i
] = 
	`cosf
(
¨g_ve˘‹
);

132 
bound¨y_y
[
i
] = 
	`söf
(
¨g_ve˘‹
);

135 
r
 = (*)
	`mÆloc
–(Ë* (
width
 * 
height
));

136 
ÆÁ
 = (*)
	`mÆloc
–(Ë* (
width
 * 
height
 * 2));

138 
j
 = 1; j < 
height
 - 1; j++)

140 
d©adx
 = (*)(
dx
->
imageD©a
 + dx->
widthSãp
 * 
j
);

141 
d©ady
 = (*)(
dy
->
imageD©a
 + dy->
widthSãp
 * 
j
);

142 
i
 = 1; i < 
width
 - 1; i++)

144 
c
 = 0;

145 
x
 = (
d©adx
[
i
 * 
numCh™√ls
 + 
c
]);

146 
y
 = (
d©ady
[
i
 * 
numCh™√ls
 + 
c
]);

148 
r
[
j
 * 
width
 + 
i
] =
	`sqπf
(
x
 * x + 
y
 * y);

149 
ch
 = 1; ch < 
numCh™√ls
; ch++)

151 
tx
 = (
d©adx
[
i
 * 
numCh™√ls
 + 
ch
]);

152 
ty
 = (
d©ady
[
i
 * 
numCh™√ls
 + 
ch
]);

153 
magnôude
 = 
	`sqπf
(
tx
 *Åx + 
ty
 *Åy);

154 if(
magnôude
 > 
r
[
j
 * 
width
 + 
i
])

156 
r
[
j
 * 
width
 + 
i
] = 
magnôude
;

157 
c
 = 
ch
;

158 
x
 = 
tx
;

159 
y
 = 
ty
;

163 
max
 = 
bound¨y_x
[0] * 
x
 + 
bound¨y_y
[0] * 
y
;

164 
maxi
 = 0;

165 
kk
 = 0; kk < 
NUM_SECTOR
; kk++)

167 
dŸProd
 = 
bound¨y_x
[
kk
] * 
x
 + 
bound¨y_y
[kk] * 
y
;

168 i‡(
dŸProd
 > 
max
)

170 
max
 = 
dŸProd
;

171 
maxi
 = 
kk
;

175 i‡(-
dŸProd
 > 
max
)

177 
max
 = -
dŸProd
;

178 
maxi
 = 
kk
 + 
NUM_SECTOR
;

182 
ÆÁ
[
j
 * 
width
 * 2 + 
i
 * 2 ] = 
maxi
 % 
NUM_SECTOR
;

183 
ÆÁ
[
j
 * 
width
 * 2 + 
i
 * 2 + 1] = 
maxi
;

187 
√¨e°
 = (*)
	`mÆloc
((Ë* 
k
);

188 
w
 = (*)
	`mÆloc
((Ë* (
k
 * 2));

190 
i
 = 0; i < 
k
 / 2; i++)

192 
√¨e°
[
i
] = -1;

194 
i
 = 
k
 / 2; i < k; i++)

196 
√¨e°
[
i
] = 1;

199 
j
 = 0; j < 
k
 / 2; j++)

201 
b_x
 = 
k
 / 2 + 
j
 + 0.5f;

202 
a_x
 = 
k
 / 2 - 
j
 - 0.5f;

203 
w
[
j
 * 2 ] = 1.0f/
a_x
 * (◊_x * 
b_x
) / (á_x + b_x));

204 
w
[
j
 * 2 + 1] = 1.0f/
b_x
 * ((
a_x
 * b_x) / (á_x + b_x));

206 
j
 = 
k
 / 2; j < k; j++)

208 
a_x
 = 
j
 - 
k
 / 2 + 0.5f;

209 
b_x
 =-
j
 + 
k
 / 2 - 0.5f + k;

210 
w
[
j
 * 2 ] = 1.0f/
a_x
 * (◊_x * 
b_x
) / (á_x + b_x));

211 
w
[
j
 * 2 + 1] = 1.0f/
b_x
 * ((
a_x
 * b_x) / (á_x + b_x));

214 
i
 = 0; i < 
sizeY
; i++)

216 
j
 = 0; j < 
sizeX
; j++)

218 
ii
 = 0; iò< 
k
; ii++)

220 
jj
 = 0; jj < 
k
; jj++)

222 i‡((
i
 * 
k
 + 
ii
 > 0) &&

223 (
i
 * 
k
 + 
ii
 < 
height
 - 1) &&

224 (
j
 * 
k
 + 
jj
 > 0) &&

225 (
j
 * 
k
 + 
jj
 < 
width
 - 1))

227 
d
 = (
k
 * 
i
 + 
ii
Ë* 
width
 + (
j
 * k + 
jj
);

228 (*
m≠
)->m≠[ 
i
 * 
°rögSize
 + 
j
 * (*m≠)->
numFótuªs
 + 
ÆÁ
[
d
 * 2 ]] +=

229 
r
[
d
] * 
w
[
ii
 * 2] * w[
jj
 * 2];

230 (*
m≠
)->m≠[ 
i
 * 
°rögSize
 + 
j
 * (*m≠)->
numFótuªs
 + 
ÆÁ
[
d
 * 2 + 1] + 
NUM_SECTOR
] +=

231 
r
[
d
] * 
w
[
ii
 * 2] * w[
jj
 * 2];

232 i‡((
i
 + 
√¨e°
[
ii
] >= 0) &&

233 (
i
 + 
√¨e°
[
ii
] <
sizeY
 - 1))

235 (*
m≠
)->m≠[(
i
 + 
√¨e°
[
ii
]Ë* 
°rögSize
 + 
j
 * (*m≠)->
numFótuªs
 + 
ÆÁ
[
d
 * 2 ] ] +=

236 
r
[
d
] * 
w
[
ii
 * 2 + 1] * w[
jj
 * 2 ];

237 (*
m≠
)->m≠[(
i
 + 
√¨e°
[
ii
]Ë* 
°rögSize
 + 
j
 * (*m≠)->
numFótuªs
 + 
ÆÁ
[
d
 * 2 + 1] + 
NUM_SECTOR
] +=

238 
r
[
d
] * 
w
[
ii
 * 2 + 1] * w[
jj
 * 2 ];

240 i‡((
j
 + 
√¨e°
[
jj
] >= 0) &&

241 (
j
 + 
√¨e°
[
jj
] <
sizeX
 - 1))

243 (*
m≠
)->m≠[
i
 * 
°rögSize
 + (
j
 + 
√¨e°
[
jj
]Ë* (*m≠)->
numFótuªs
 + 
ÆÁ
[
d
 * 2 ] ] +=

244 
r
[
d
] * 
w
[
ii
 * 2] * w[
jj
 * 2 + 1];

245 (*
m≠
)->m≠[
i
 * 
°rögSize
 + (
j
 + 
√¨e°
[
jj
]Ë* (*m≠)->
numFótuªs
 + 
ÆÁ
[
d
 * 2 + 1] + 
NUM_SECTOR
] +=

246 
r
[
d
] * 
w
[
ii
 * 2] * w[
jj
 * 2 + 1];

248 i‡((
i
 + 
√¨e°
[
ii
] >= 0) &&

249 (
i
 + 
√¨e°
[
ii
] <
sizeY
 - 1) &&

250 (
j
 + 
√¨e°
[
jj
] >= 0) &&

251 (
j
 + 
√¨e°
[
jj
] <
sizeX
 - 1))

253 (*
m≠
)->m≠[(
i
 + 
√¨e°
[
ii
]Ë* 
°rögSize
 + (
j
 +Çóª°[
jj
]Ë* (*m≠)->
numFótuªs
 + 
ÆÁ
[
d
 * 2 ] ] +=

254 
r
[
d
] * 
w
[
ii
 * 2 + 1] * w[
jj
 * 2 + 1];

255 (*
m≠
)->m≠[(
i
 + 
√¨e°
[
ii
]Ë* 
°rögSize
 + (
j
 +Çóª°[
jj
]Ë* (*m≠)->
numFótuªs
 + 
ÆÁ
[
d
 * 2 + 1] + 
NUM_SECTOR
] +=

256 
r
[
d
] * 
w
[
ii
 * 2 + 1] * w[
jj
 * 2 + 1];

264 
	`cvRñó£Image
(&
dx
);

265 
	`cvRñó£Image
(&
dy
);

268 
	`‰ì
(
w
);

269 
	`‰ì
(
√¨e°
);

271 
	`‰ì
(
r
);

272 
	`‰ì
(
ÆÁ
);

274  
LATENT_SVM_OK
;

275 
	}
}

290 
	$n‹mÆizeAndTrunˇã
(
CvLSVMFótuªM≠Caskade
 *
m≠
, c⁄° 
ÆÁ
)

292 
i
,
j
, 
ii
;

293 
sizeX
, 
sizeY
, 
p
, 
pos
, 
µ
, 
xp
, 
pos1
, 
pos2
;

294 * 
∑πOfN‹m
;

295 * 
√wD©a
;

296 
vÆOfN‹m
;

298 
sizeX
 = 
m≠
->sizeX;

299 
sizeY
 = 
m≠
->sizeY;

300 
∑πOfN‹m
 = (*)
	`mÆloc
 ((Ë* (
sizeX
 * 
sizeY
));

302 
p
 = 
NUM_SECTOR
;

303 
xp
 = 
NUM_SECTOR
 * 3;

304 
µ
 = 
NUM_SECTOR
 * 12;

306 
i
 = 0; i < 
sizeX
 * 
sizeY
; i++)

308 
vÆOfN‹m
 = 0.0f;

309 
pos
 = 
i
 * 
m≠
->
numFótuªs
;

310 
j
 = 0; j < 
p
; j++)

312 
vÆOfN‹m
 +
m≠
->m≠[
pos
 + 
j
] * map->map[pos + j];

314 
∑πOfN‹m
[
i
] = 
vÆOfN‹m
;

317 
sizeX
 -= 2;

318 
sizeY
 -= 2;

320 
√wD©a
 = (*)
	`mÆloc
 ((Ë* (
sizeX
 * 
sizeY
 * 
µ
));

322 
i
 = 1; i <
sizeY
; i++)

324 
j
 = 1; j <
sizeX
; j++)

326 
vÆOfN‹m
 = 
	`sqπf
(

327 
∑πOfN‹m
[(
i
 )*(
sizeX
 + 2Ë+ (
j
 )] +

328 
∑πOfN‹m
[(
i
 )*(
sizeX
 + 2Ë+ (
j
 + 1)] +

329 
∑πOfN‹m
[(
i
 + 1)*(
sizeX
 + 2Ë+ (
j
 )] +

330 
∑πOfN‹m
[(
i
 + 1)*(
sizeX
 + 2Ë+ (
j
 + 1)]Ë+ 
FLT_EPSILON
;

331 
pos1
 = (
i
 ) * (
sizeX
 + 2Ë* 
xp
 + (
j
 ) * xp;

332 
pos2
 = (
i
-1Ë* (
sizeX
 ) * 
µ
 + (
j
-1) *Öp;

333 
ii
 = 0; iò< 
p
; ii++)

335 
√wD©a
[
pos2
 + 
ii
 ] = 
m≠
->m≠[
pos1
 + iò] / 
vÆOfN‹m
;

337 
ii
 = 0; iò< 2 * 
p
; ii++)

339 
√wD©a
[
pos2
 + 
ii
 + 
p
 * 4] = 
m≠
->m≠[
pos1
 + iò+Ö] / 
vÆOfN‹m
;

341 
vÆOfN‹m
 = 
	`sqπf
(

342 
∑πOfN‹m
[(
i
 )*(
sizeX
 + 2Ë+ (
j
 )] +

343 
∑πOfN‹m
[(
i
 )*(
sizeX
 + 2Ë+ (
j
 + 1)] +

344 
∑πOfN‹m
[(
i
 - 1)*(
sizeX
 + 2Ë+ (
j
 )] +

345 
∑πOfN‹m
[(
i
 - 1)*(
sizeX
 + 2Ë+ (
j
 + 1)]Ë+ 
FLT_EPSILON
;

346 
ii
 = 0; iò< 
p
; ii++)

348 
√wD©a
[
pos2
 + 
ii
 + 
p
 ] = 
m≠
->m≠[
pos1
 + iò] / 
vÆOfN‹m
;

350 
ii
 = 0; iò< 2 * 
p
; ii++)

352 
√wD©a
[
pos2
 + 
ii
 + 
p
 * 6] = 
m≠
->m≠[
pos1
 + iò+Ö] / 
vÆOfN‹m
;

354 
vÆOfN‹m
 = 
	`sqπf
(

355 
∑πOfN‹m
[(
i
 )*(
sizeX
 + 2Ë+ (
j
 )] +

356 
∑πOfN‹m
[(
i
 )*(
sizeX
 + 2Ë+ (
j
 - 1)] +

357 
∑πOfN‹m
[(
i
 + 1)*(
sizeX
 + 2Ë+ (
j
 )] +

358 
∑πOfN‹m
[(
i
 + 1)*(
sizeX
 + 2Ë+ (
j
 - 1)]Ë+ 
FLT_EPSILON
;

359 
ii
 = 0; iò< 
p
; ii++)

361 
√wD©a
[
pos2
 + 
ii
 + 
p
 * 2] = 
m≠
->m≠[
pos1
 + iò] / 
vÆOfN‹m
;

363 
ii
 = 0; iò< 2 * 
p
; ii++)

365 
√wD©a
[
pos2
 + 
ii
 + 
p
 * 8] = 
m≠
->m≠[
pos1
 + iò+Ö] / 
vÆOfN‹m
;

367 
vÆOfN‹m
 = 
	`sqπf
(

368 
∑πOfN‹m
[(
i
 )*(
sizeX
 + 2Ë+ (
j
 )] +

369 
∑πOfN‹m
[(
i
 )*(
sizeX
 + 2Ë+ (
j
 - 1)] +

370 
∑πOfN‹m
[(
i
 - 1)*(
sizeX
 + 2Ë+ (
j
 )] +

371 
∑πOfN‹m
[(
i
 - 1)*(
sizeX
 + 2Ë+ (
j
 - 1)]Ë+ 
FLT_EPSILON
;

372 
ii
 = 0; iò< 
p
; ii++)

374 
√wD©a
[
pos2
 + 
ii
 + 
p
 * 3 ] = 
m≠
->m≠[
pos1
 + iò] / 
vÆOfN‹m
;

376 
ii
 = 0; iò< 2 * 
p
; ii++)

378 
√wD©a
[
pos2
 + 
ii
 + 
p
 * 10] = 
m≠
->m≠[
pos1
 + iò+Ö] / 
vÆOfN‹m
;

383 
i
 = 0; i < 
sizeX
 * 
sizeY
 * 
µ
; i++)

385 if(
√wD©a
 [
i
] > 
ÆÁ
)ÇewData [i] =álfa;

389 
m≠
->
numFótuªs
 = 
µ
;

390 
m≠
->
sizeX
 = sizeX;

391 
m≠
->
sizeY
 = sizeY;

393 
	`‰ì
 (
m≠
->map);

394 
	`‰ì
 (
∑πOfN‹m
);

396 
m≠
->m≠ = 
√wD©a
;

398  
LATENT_SVM_OK
;

399 
	}
}

414 
	$PCAFótuªM≠s
(
CvLSVMFótuªM≠Caskade
 *
m≠
)

416 
i
,
j
, 
ii
, 
jj
, 
k
;

417 
sizeX
, 
sizeY
, 
p
, 
µ
, 
xp
, 
yp
, 
pos1
, 
pos2
;

418 * 
√wD©a
;

419 
vÆ
;

420 
nx
, 
ny
;

422 
sizeX
 = 
m≠
->sizeX;

423 
sizeY
 = 
m≠
->sizeY;

424 
p
 = 
m≠
->
numFótuªs
;

425 
µ
 = 
NUM_SECTOR
 * 3 + 4;

426 
yp
 = 4;

427 
xp
 = 
NUM_SECTOR
;

429 
nx
 = 1.0‡/ 
	`sqπf
(()(
xp
 * 2));

430 
ny
 = 1.0‡/ 
	`sqπf
(()(
yp
 ));

432 
√wD©a
 = (*)
	`mÆloc
 ((Ë* (
sizeX
 * 
sizeY
 * 
µ
));

434 
i
 = 0; i < 
sizeY
; i++)

436 
j
 = 0; j < 
sizeX
; j++)

438 
pos1
 = ((
i
)*
sizeX
 + 
j
)*
p
;

439 
pos2
 = ((
i
)*
sizeX
 + 
j
)*
µ
;

440 
k
 = 0;

441 
jj
 = 0; jj < 
xp
 * 2; jj++)

443 
vÆ
 = 0;

444 
ii
 = 0; iò< 
yp
; ii++)

446 
vÆ
 +
m≠
->m≠[
pos1
 + 
yp
 * 
xp
 + 
ii
 * x∞* 2 + 
jj
];

448 
√wD©a
[
pos2
 + 
k
] = 
vÆ
 * 
ny
;

449 
k
++;

451 
jj
 = 0; jj < 
xp
; jj++)

453 
vÆ
 = 0;

454 
ii
 = 0; iò< 
yp
; ii++)

456 
vÆ
 +
m≠
->m≠[
pos1
 + 
ii
 * 
xp
 + 
jj
];

458 
√wD©a
[
pos2
 + 
k
] = 
vÆ
 * 
ny
;

459 
k
++;

461 
ii
 = 0; iò< 
yp
; ii++)

463 
vÆ
 = 0;

464 
jj
 = 0; jj < 2 * 
xp
; jj++)

466 
vÆ
 +
m≠
->m≠[
pos1
 + 
yp
 * 
xp
 + 
ii
 * x∞* 2 + 
jj
];

468 
√wD©a
[
pos2
 + 
k
] = 
vÆ
 * 
nx
;

469 
k
++;

475 
m≠
->
numFótuªs
 = 
µ
;

477 
	`‰ì
 (
m≠
->map);

479 
m≠
->m≠ = 
√wD©a
;

481  
LATENT_SVM_OK
;

482 
	}
}

487 
	$ÆlocFótuªM≠Obje˘
(
CvLSVMFótuªM≠Caskade
 **
obj
, c⁄° 
sizeX
,

488 c⁄° 
sizeY
, c⁄° 
numFótuªs
)

490 
i
;

491 (*
obj
Ë(
CvLSVMFótuªM≠Caskade
 *)
	`mÆloc
((CvLSVMFeatureMapCaskade));

492 (*
obj
)->
sizeX
 = sizeX;

493 (*
obj
)->
sizeY
 = sizeY;

494 (*
obj
)->
numFótuªs
 =ÇumFeatures;

495 (*
obj
)->
m≠
 = (*Ë
	`mÆloc
( () *

496 (
sizeX
 * 
sizeY
 * 
numFótuªs
));

497 
i
 = 0; i < 
sizeX
 * 
sizeY
 * 
numFótuªs
; i++)

499 (*
obj
)->
m≠
[
i
] = 0.0f;

501  
LATENT_SVM_OK
;

502 
	}
}

504 
	$‰ìFótuªM≠Obje˘
 (
CvLSVMFótuªM≠Caskade
 **
obj
)

506 if(*
obj
 =
NULL
Ë 
LATENT_SVM_MEM_NULL
;

507 
	`‰ì
((*
obj
)->
m≠
);

508 
	`‰ì
(*
obj
);

509 (*
obj
Ë
NULL
;

510  
LATENT_SVM_OK
;

511 
	}
}

	@src/fhog.hpp

50 #i‚de‡
_FHOG_H_


51 
	#_FHOG_H_


	)

53 
	~<°dio.h
>

59 
	~"›ícv2/img¥oc/img¥oc_c.h
"

73 
	msizeX
;

74 
	msizeY
;

75 
	mnumFótuªs
;

76 *
	mm≠
;

77 } 
	tCvLSVMFótuªM≠Caskade
;

80 
	~"Êﬂt.h
"

82 
	#PI
 
CV_PI


	)

84 
	#EPS
 0.000001

	)

86 
	#F_MAX
 
FLT_MAX


	)

87 
	#F_MIN
 -
FLT_MAX


	)

91 
	#NUM_SECTOR
 9

	)

95 
	#LAMBDA
 10

	)

98 
	#SIDE_LENGTH
 8

	)

100 
	#VAL_OF_TRUNCATE
 0.2f

	)

104 
	#LATENT_SVM_OK
 0

	)

105 
	#LATENT_SVM_MEM_NULL
 2

	)

106 
	#DISTANCE_TRANSFORM_OK
 1

	)

107 
	#DISTANCE_TRANSFORM_GET_INTERSECTION_ERROR
 -1

	)

108 
	#DISTANCE_TRANSFORM_ERROR
 -2

	)

109 
	#DISTANCE_TRANSFORM_EQUAL_POINTS
 -3

	)

110 
	#LATENT_SVM_GET_FEATURE_PYRAMID_FAILED
 -4

	)

111 
	#LATENT_SVM_SEARCH_OBJECT_FAILED
 -5

	)

112 
	#LATENT_SVM_FAILED_SUPERPOSITION
 -6

	)

113 
	#FILTER_OUT_OF_BOUNDARIES
 -7

	)

114 
	#LATENT_SVM_TBB_SCHEDULE_CREATION_FAILED
 -8

	)

115 
	#LATENT_SVM_TBB_NUMTHREADS_NOT_CORRECT
 -9

	)

116 
	#FFT_OK
 2

	)

117 
	#FFT_ERROR
 -10

	)

118 
	#LSVM_PARSER_FILE_NOT_FOUND
 -11

	)

135 
gëFótuªM≠s
(c⁄° 
I∂Image
 * 
image
, c⁄° 
k
, 
CvLSVMFótuªM≠Caskade
 **
m≠
);

151 
n‹mÆizeAndTrunˇã
(
CvLSVMFótuªM≠Caskade
 *
m≠
, c⁄° 
ÆÁ
);

167 
PCAFótuªM≠s
(
CvLSVMFótuªM≠Caskade
 *
m≠
);

172 
ÆlocFótuªM≠Obje˘
(
CvLSVMFótuªM≠Caskade
 **
obj
, c⁄° 
sizeX
, c⁄° 
sizeY
,

173 c⁄° 
p
);

175 
‰ìFótuªM≠Obje˘
 (
CvLSVMFótuªM≠Caskade
 **
obj
);

	@src/kcftracker.cpp

82 
	~<io°ªam
>

83 #i‚de‡
_KCFTRACKER_HEADERS


84 
	~"kc·øckî.hµ
"

85 
	~"f·toﬁs.hµ
"

86 
	~"ª˘toﬁs.hµ
"

87 
	~"fhog.hµ
"

88 
	~"œbd©a.hµ
"

92 
	gKCFTøckî
::
	$KCFTøckî
(
boﬁ
 
hog
, boﬁ 
fixed_wödow
, boﬁ 
mu…isˇÀ
, boﬁ 
œb
)

96 
œmbda
 = 0.0001;

97 
∑ddög
 = 2.5;

99 
ouçut_sigma_Á˘‹
 = 0.125;

102 i‡(
hog
) {

104 
öãΩ_Á˘‹
 = 0.012;

105 
sigma
 = 0.6;

109 
˚Œ_size
 = 4;

110 
_hog„©uªs
 = 
åue
;

112 i‡(
œb
) {

113 
öãΩ_Á˘‹
 = 0.005;

114 
sigma
 = 0.4;

116 
ouçut_sigma_Á˘‹
 = 0.1;

118 
_œb„©uªs
 = 
åue
;

119 
_œbCíåoids
 = 
cv
::
	`M©
(
nClu°îs
, 3, 
CV_32FC1
, &
d©a
);

120 
˚Œ_sizeQ
 = 
˚Œ_size
*cell_size;

123 
_œb„©uªs
 = 
Ál£
;

127 
öãΩ_Á˘‹
 = 0.075;

128 
sigma
 = 0.2;

129 
˚Œ_size
 = 1;

130 
_hog„©uªs
 = 
Ál£
;

132 i‡(
œb
) {

133 
	`¥ötf
("Lab featuresáre only used with HOG features.\n");

134 
_œb„©uªs
 = 
Ál£
;

139 i‡(
mu…isˇÀ
) {

140 
ãm∂©e_size
 = 96;

142 
sˇÀ_°ï
 = 1.05;

143 
sˇÀ_weight
 = 0.95;

144 i‡(!
fixed_wödow
) {

146 
fixed_wödow
 = 
åue
;

149 i‡(
fixed_wödow
) {

150 
ãm∂©e_size
 = 96;

152 
sˇÀ_°ï
 = 1;

155 
ãm∂©e_size
 = 1;

156 
sˇÀ_°ï
 = 1;

158 
	}
}

161 
	gKCFTøckî
::
	$öô
(c⁄° 
cv
::
Re˘
 &
roi
, cv::
M©
 
image
)

163 
_roi
 = 
roi
;

164 
	`as£π
(
roi
.
width
 >0 &&Ñoi.
height
 >= 0);

165 
_tm∂
 = 
	`gëFótuªs
(
image
, 1);

166 
_¥ob
 = 
	`¸óãGaussünPók
(
size_∑tch
[0], size_patch[1]);

167 
_Æphaf
 = 
cv
::
	`M©
(
size_∑tch
[0], size_∑tch[1], 
CV_32FC2
, (0));

170 
	`åaö
(
_tm∂
, 1.0);

171 
	}
}

173 
	gcv
::
Re˘
 
KCFTøckî
::
	$upd©e
(
cv
::
M©
 
image
)

175 i‡(
_roi
.
x
 + _roi.
width
 <= 0) _roi.x = -_roi.width + 1;

176 i‡(
_roi
.
y
 + _roi.
height
 <= 0) _roi.y = -_roi.height + 1;

177 i‡(
_roi
.
x
 >
image
.
cﬁs
 - 1) _roi.x = image.cols - 2;

178 i‡(
_roi
.
y
 >
image
.
rows
 - 1) _roi.y = image.rows - 2;

180 
cx
 = 
_roi
.
x
 + _roi.
width
 / 2.0f;

181 
cy
 = 
_roi
.
y
 + _roi.
height
 / 2.0f;

184 
≥ak_vÆue
;

185 
cv
::
Poöt2f
 
ªs
 = 
	`dëe˘
(
_tm∂
, 
	`gëFótuªs
(
image
, 0, 1.0f), 
≥ak_vÆue
);

187 i‡(
sˇÀ_°ï
 != 1) {

189 
√w_≥ak_vÆue
;

190 
cv
::
Poöt2f
 
√w_ªs
 = 
	`dëe˘
(
_tm∂
, 
	`gëFótuªs
(
image
, 0, 1.0‡/ 
sˇÀ_°ï
), 
√w_≥ak_vÆue
);

192 i‡(
sˇÀ_weight
 * 
√w_≥ak_vÆue
 > 
≥ak_vÆue
) {

193 
ªs
 = 
√w_ªs
;

194 
≥ak_vÆue
 = 
√w_≥ak_vÆue
;

195 
_sˇÀ
 /
sˇÀ_°ï
;

196 
_roi
.
width
 /
sˇÀ_°ï
;

197 
_roi
.
height
 /
sˇÀ_°ï
;

201 
√w_ªs
 = 
	`dëe˘
(
_tm∂
, 
	`gëFótuªs
(
image
, 0, 
sˇÀ_°ï
), 
√w_≥ak_vÆue
);

203 i‡(
sˇÀ_weight
 * 
√w_≥ak_vÆue
 > 
≥ak_vÆue
) {

204 
ªs
 = 
√w_ªs
;

205 
≥ak_vÆue
 = 
√w_≥ak_vÆue
;

206 
_sˇÀ
 *
sˇÀ_°ï
;

207 
_roi
.
width
 *
sˇÀ_°ï
;

208 
_roi
.
height
 *
sˇÀ_°ï
;

213 
_roi
.
x
 = 
cx
 - _roi.
width
 / 2.0‡+ ((Ë
ªs
.x * 
˚Œ_size
 * 
_sˇÀ
);

214 
_roi
.
y
 = 
cy
 - _roi.
height
 / 2.0‡+ ((Ë
ªs
.y * 
˚Œ_size
 * 
_sˇÀ
);

216 i‡(
_roi
.
x
 >
image
.
cﬁs
 - 1) _roi.x = image.cols - 1;

217 i‡(
_roi
.
y
 >
image
.
rows
 - 1) _roi.y = image.rows - 1;

218 i‡(
_roi
.
x
 + _roi.
width
 <= 0) _roi.x = -_roi.width + 2;

219 i‡(
_roi
.
y
 + _roi.
height
 <= 0) _roi.y = -_roi.height + 2;

221 
	`as£π
(
_roi
.
width
 >0 && _roi.
height
 >= 0);

222 
cv
::
M©
 
x
 = 
	`gëFótuªs
(
image
, 0);

223 
	`åaö
(
x
, 
öãΩ_Á˘‹
);

225  
_roi
;

226 
	}
}

230 
	gcv
::
Poöt2f
 
KCFTøckî
::
	$dëe˘
(
cv
::
M©
 
z
, cv::M© 
x
, &
≥ak_vÆue
)

232 
usög
 
«me•a˚
 
FFTToﬁs
;

234 
cv
::
M©
 
k
 = 
	`gaussünC‹ªœti⁄
(
x
, 
z
);

235 
cv
::
M©
 
ªs
 = (
	`ªÆ
(
	`f·d
(
	`com∂exMu…ùliˇti⁄
(
_Æphaf
, f·d(
k
)), 
åue
)));

238 
cv
::
Poöt2i
 
pi
;

239 
pv
;

241 
cv
::
Poöt2i
 
pi_mö
;

242 
pv_mö
;

243 
cv
::
	`möMaxLoc
(
ªs
, &
pv_mö
, &
pv
, &
pi_mö
, &
pi
);

244 
≥ak_vÆue
 = (Ë
pv
;

245 
°d
::
cout
 << "möÑï⁄£ : " << 
pv_mö
 << " maxÑe•⁄£ :" << 
pv
 << std::
ídl
;

248 
cv
::
Poöt2f
 
	`p
(()
pi
.
x
, (Ìi.
y
);

250 i‡(
pi
.
x
 > 0 &&Öi.x < 
ªs
.
cﬁs
-1) {

251 
p
.
x
 +
	`subPixñPók
(
ªs
.
©
<>(
pi
.
y
,Öi.x-1), 
≥ak_vÆue
,Ñes.at<>(pi.y,Öi.x+1));

254 i‡(
pi
.
y
 > 0 &&Öi.y < 
ªs
.
rows
-1) {

255 
p
.
y
 +
	`subPixñPók
(
ªs
.
©
<>(
pi
.y-1,Öi.
x
), 
≥ak_vÆue
,Ñes.at<>(pi.y+1,Öi.x));

258 
p
.
x
 -(
ªs
.
cﬁs
) / 2;

259 
p
.
y
 -(
ªs
.
rows
) / 2;

261  
p
;

262 
	}
}

265 
	gKCFTøckî
::
	$åaö
(
cv
::
M©
 
x
, 
åaö_öãΩ_Á˘‹
)

267 
usög
 
«me•a˚
 
FFTToﬁs
;

269 
cv
::
M©
 
k
 = 
	`gaussünC‹ªœti⁄
(
x
, x);

270 
cv
::
M©
 
Æphaf
 = 
	`com∂exDivisi⁄
(
_¥ob
, (
	`f·d
(
k
Ë+ 
œmbda
));

272 
_tm∂
 = (1 - 
åaö_öãΩ_Á˘‹
Ë* _tm∂ + (åaö_öãΩ_Á˘‹Ë* 
x
;

273 
_Æphaf
 = (1 - 
åaö_öãΩ_Á˘‹
Ë* _Æpha‡+ (åaö_öãΩ_Á˘‹Ë* 
Æphaf
;

286 
	}
}

289 
	gcv
::
M©
 
KCFTøckî
::
	$gaussünC‹ªœti⁄
(
cv
::
M©
 
x1
, cv::M© 
x2
)

291 
usög
 
«me•a˚
 
FFTToﬁs
;

292 
cv
::
M©
 
c
 = cv::
	`M©
–cv::
	`Size
(
size_∑tch
[1], size_∑tch[0]), 
CV_32F
, cv::
	`Sˇœr
(0) );

294 i‡(
_hog„©uªs
) {

295 
cv
::
M©
 
ˇux
;

296 
cv
::
M©
 
x1aux
;

297 
cv
::
M©
 
x2aux
;

298 
i
 = 0; i < 
size_∑tch
[2]; i++) {

299 
x1aux
 = 
x1
.
	`row
(
i
);

300 
x1aux
 = x1aux.
	`ªsh≠e
(1, 
size_∑tch
[0]);

301 
x2aux
 = 
x2
.
	`row
(
i
).
	`ªsh≠e
(1, 
size_∑tch
[0]);

302 
cv
::
	`mulS≥˘rums
(
	`f·d
(
x1aux
), f·d(
x2aux
), 
ˇux
, 0, 
åue
);

303 
ˇux
 = 
	`f·d
(ˇux, 
åue
);

304 
	`ª¨ønge
(
ˇux
);

305 
ˇux
.
	`c⁄vîtTo
(ˇux,
CV_32F
);

306 
c
 = c + 
	`ªÆ
(
ˇux
);

311 
cv
::
	`mulS≥˘rums
(
	`f·d
(
x1
), f·d(
x2
), 
c
, 0, 
åue
);

312 
c
 = 
	`f·d
(c, 
åue
);

313 
	`ª¨ønge
(
c
);

314 
c
 = 
	`ªÆ
(c);

316 
cv
::
M©
 
d
;

317 
cv
::
	`max
(–(cv::
	`sum
(
x1
.
	`mul
(x1))[0] + cv::sum(
x2
.mul(x2))[0])- 2. * 
c
Ë/ (
size_∑tch
[0]*size_∑tch[1]*size_∑tch[2]Ë, 0, 
d
);

319 
cv
::
M©
 
k
;

320 
cv
::
	`exp
((-
d
 / (
sigma
 * sigma)), 
k
);

321  
k
;

322 
	}
}

325 
	gcv
::
M©
 
KCFTøckî
::
	$¸óãGaussünPók
(
sizey
, 
sizex
)

327 
cv
::
M©_
<> 
	`ªs
(
sizey
, 
sizex
);

329 
syh
 = (
sizey
) / 2;

330 
sxh
 = (
sizex
) / 2;

332 
ouçut_sigma
 = 
°d
::
	`sqπ
((Ë
sizex
 * 
sizey
Ë/ 
∑ddög
 * 
ouçut_sigma_Á˘‹
;

333 
mu…
 = -0.5 / (
ouçut_sigma
 * output_sigma);

335 
i
 = 0; i < 
sizey
; i++)

336 
j
 = 0; j < 
sizex
; j++)

338 
ih
 = 
i
 - 
syh
;

339 
jh
 = 
j
 - 
sxh
;

340 
	`ªs
(
i
, 
j
Ë
°d
::
	`exp
(
mu…
 * (Ë(
ih
 * ih + 
jh
 * jh));

342  
FFTToﬁs
::
	`f·d
(
ªs
);

343 
	}
}

346 
	gcv
::
M©
 
KCFTøckî
::
	$gëFótuªs
(c⁄° 
cv
::
M©
 & 
image
, 
boﬁ
 
öôh™n
, 
sˇÀ_adju°
)

348 
cv
::
Re˘
 
exåa˘ed_roi
;

350 
cx
 = 
_roi
.
x
 + _roi.
width
 / 2;

351 
cy
 = 
_roi
.
y
 + _roi.
height
 / 2;

353 i‡(
öôh™n
) {

354 
∑dded_w
 = 
_roi
.
width
 * 
∑ddög
;

355 
∑dded_h
 = 
_roi
.
height
 * 
∑ddög
;

357 i‡(
ãm∂©e_size
 > 1) {

358 i‡(
∑dded_w
 >
∑dded_h
)

359 
_sˇÀ
 = 
∑dded_w
 / (Ë
ãm∂©e_size
;

361 
_sˇÀ
 = 
∑dded_h
 / (Ë
ãm∂©e_size
;

363 
_tm∂_sz
.
width
 = 
∑dded_w
 / 
_sˇÀ
;

364 
_tm∂_sz
.
height
 = 
∑dded_h
 / 
_sˇÀ
;

367 
_tm∂_sz
.
width
 = 
∑dded_w
;

368 
_tm∂_sz
.
height
 = 
∑dded_h
;

369 
_sˇÀ
 = 1;

383 i‡(
_hog„©uªs
) {

385 
_tm∂_sz
.
width
 = ( ( ()(_tm∂_sz.width / (2 * 
˚Œ_size
)) ) * 2 * cell_size ) + cell_size*2;

386 
_tm∂_sz
.
height
 = ( ( ()(_tm∂_sz.heighà/ (2 * 
˚Œ_size
)) ) * 2 * cell_size ) + cell_size*2;

389 
_tm∂_sz
.
width
 = (_tmpl_sz.width / 2) * 2;

390 
_tm∂_sz
.
height
 = (_tmpl_sz.height / 2) * 2;

394 
exåa˘ed_roi
.
width
 = 
sˇÀ_adju°
 * 
_sˇÀ
 * 
_tm∂_sz
.width;

395 
exåa˘ed_roi
.
height
 = 
sˇÀ_adju°
 * 
_sˇÀ
 * 
_tm∂_sz
.height;

398 
exåa˘ed_roi
.
x
 = 
cx
 -Éxåa˘ed_roi.
width
 / 2;

399 
exåa˘ed_roi
.
y
 = 
cy
 -Éxåa˘ed_roi.
height
 / 2;

401 
cv
::
M©
 
FótuªsM≠
;

402 
cv
::
M©
 
z
 = 
Re˘Toﬁs
::
	`subwödow
(
image
, 
exåa˘ed_roi
, cv::
BORDER_REPLICATE
);

404 i‡(
z
.
cﬁs
 !
_tm∂_sz
.
width
 || z.
rows
 !_tm∂_sz.
height
) {

405 
cv
::
	`ªsize
(
z
, z, 
_tm∂_sz
);

409 i‡(
_hog„©uªs
) {

410 
I∂Image
 
z_ùl
 = 
	`cvI∂Image
(
z
);

411 
CvLSVMFótuªM≠Caskade
 *
m≠
;

412 
	`gëFótuªM≠s
(&
z_ùl
, 
˚Œ_size
, &
m≠
);

413 
	`n‹mÆizeAndTrunˇã
(
m≠
,0.2f);

414 
	`PCAFótuªM≠s
(
m≠
);

415 
size_∑tch
[0] = 
m≠
->
sizeY
;

416 
size_∑tch
[1] = 
m≠
->
sizeX
;

417 
size_∑tch
[2] = 
m≠
->
numFótuªs
;

419 
FótuªsM≠
 = 
cv
::
	`M©
(cv::
	`Size
(
m≠
->
numFótuªs
,m≠->
sizeX
*m≠->
sizeY
), 
CV_32F
, map->map);

420 
FótuªsM≠
 = FótuªsM≠.
	`t
();

421 
	`‰ìFótuªM≠Obje˘
(&
m≠
);

424 i‡(
_œb„©uªs
) {

425 
cv
::
M©
 
imgLab
;

426 
	`cvtCﬁ‹
(
z
, 
imgLab
, 
CV_BGR2Lab
);

427 *
öput
 = (*)(
imgLab
.
d©a
);

430 
cv
::
M©
 
ouçutLab
 = cv::
	`M©
(
_œbCíåoids
.
rows
, 
size_∑tch
[0]*size_∑tch[1], 
CV_32F
, (0));

432 
˙tCñl
 = 0;

434 
cY
 = 
˚Œ_size
; cY < 
z
.
rows
-cell_size; cY+=cell_size){

435 
cX
 = 
˚Œ_size
; cX < 
z
.
cﬁs
-cell_size; cX+=cell_size){

437 
y
 = 
cY
; y < cY+
˚Œ_size
; ++y){

438 
x
 = 
cX
; x < cX+
˚Œ_size
; ++x){

440 
l
 = ()
öput
[(
z
.
cﬁs
 * 
y
 + 
x
) * 3];

441 
a
 = ()
öput
[(
z
.
cﬁs
 * 
y
 + 
x
) * 3 + 1];

442 
b
 = ()
öput
[(
z
.
cﬁs
 * 
y
 + 
x
) * 3 + 2];

445 
möDi°
 = 
FLT_MAX
;

446 
möIdx
 = 0;

447 *
öputCíåoid
 = (*)(
_œbCíåoids
.
d©a
);

448 
k
 = 0; k < 
_œbCíåoids
.
rows
; ++k){

449 
di°
 = ( (
l
 - 
öputCíåoid
[3*
k
]) * (l - inputCentroid[3*k]) )

450 + ( (
a
 - 
öputCíåoid
[3*
k
+1]) * (a - inputCentroid[3*k+1]) )

451 + ( (
b
 - 
öputCíåoid
[3*
k
+2]) * (b - inputCentroid[3*k+2]) );

452 if(
di°
 < 
möDi°
){

453 
möDi°
 = 
di°
;

454 
möIdx
 = 
k
;

458 
ouçutLab
.
©
<>(
möIdx
, 
˙tCñl
Ë+1.0 / 
˚Œ_sizeQ
;

462 
˙tCñl
++;

466 
size_∑tch
[2] +
_œbCíåoids
.
rows
;

467 
FótuªsM≠
.
	`push_back
(
ouçutLab
);

471 
FótuªsM≠
 = 
Re˘Toﬁs
::
	`gëGøyImage
(
z
);

472 
FótuªsM≠
 -= () 0.5;

473 
size_∑tch
[0] = 
z
.
rows
;

474 
size_∑tch
[1] = 
z
.
cﬁs
;

475 
size_∑tch
[2] = 1;

478 i‡(
öôh™n
) {

479 
	`¸óãH™nögM©s
();

481 
FótuªsM≠
 = 
h™n
.
	`mul
(FeaturesMap);

482  
FótuªsM≠
;

483 
	}
}

486 
	gKCFTøckî
::
	$¸óãH™nögM©s
()

488 
cv
::
M©
 
h™n1t
 = cv::
	`M©
(cv::
	`Size
(
size_∑tch
[1],1), 
CV_32F
, cv::
	`Sˇœr
(0));

489 
cv
::
M©
 
h™n2t
 = cv::
	`M©
(cv::
	`Size
(1,
size_∑tch
[0]), 
CV_32F
, cv::
	`Sˇœr
(0));

491 
i
 = 0; i < 
h™n1t
.
cﬁs
; i++)

492 
h™n1t
.
©
<> (0, 
i
Ë0.5 * (1 - 
°d
::
	`cos
(2 * 3.14159265358979323846 * i / (h™n1t.
cﬁs
 - 1)));

493 
i
 = 0; i < 
h™n2t
.
rows
; i++)

494 
h™n2t
.
©
<> (
i
, 0Ë0.5 * (1 - 
°d
::
	`cos
(2 * 3.14159265358979323846 * i / (h™n2t.
rows
 - 1)));

496 
cv
::
M©
 
h™n2d
 = 
h™n2t
 * 
h™n1t
;

498 i‡(
_hog„©uªs
) {

499 
cv
::
M©
 
h™n1d
 = 
h™n2d
.
	`ªsh≠e
(1,1);

501 
h™n
 = 
cv
::
	`M©
(cv::
	`Size
(
size_∑tch
[0]*size_∑tch[1], size_∑tch[2]), 
CV_32F
, cv::
	`Sˇœr
(0));

502 
i
 = 0; i < 
size_∑tch
[2]; i++) {

503 
j
 = 0; j<
size_∑tch
[0]*size_patch[1]; j++) {

504 
h™n
.
©
<>(
i
,
j
Ë
h™n1d
.at<>(0,j);

510 
h™n
 = 
h™n2d
;

512 
	}
}

515 
	gKCFTøckî
::
	$subPixñPók
(
À·
, 
˚¡î
, 
right
)

517 
divis‹
 = 2 * 
˚¡î
 - 
right
 - 
À·
;

519 i‡(
divis‹
 == 0)

522  0.5 * (
right
 - 
À·
Ë/ 
divis‹
;

523 
	}
}

	@src/kcftracker.hpp

83 #¥agm®
⁄˚


85 
	~"åackî.h
"

87 #i‚de‡
_OPENCV_KCFTRACKER_HPP_


88 
	#_OPENCV_KCFTRACKER_HPP_


	)

91 ˛as†
	cKCFTøckî
 : 
public
 
Tøckî


93 
public
:

95 
KCFTøckî
(
boﬁ
 
hog
 = 
åue
, boﬁ 
fixed_wödow
 =Årue, boﬁ 
mu…isˇÀ
 =Årue, boﬁ 
œb
 =Årue);

98 
vútuÆ
 
öô
(c⁄° 
cv
::
Re˘
 &
roi
, cv::
M©
 
image
);

101 
vútuÆ
 
	mcv
::
Re˘
 
upd©e
(
cv
::
M©
 
image
);

103 
	möãΩ_Á˘‹
;

104 
	msigma
;

105 
	mœmbda
;

106 
	m˚Œ_size
;

107 
	m˚Œ_sizeQ
;

108 
	m∑ddög
;

109 
	mouçut_sigma_Á˘‹
;

110 
	mãm∂©e_size
;

111 
	msˇÀ_°ï
;

112 
	msˇÀ_weight
;

114 
	m¥Ÿe˘ed
:

116 
cv
::
Poöt2f
 
dëe˘
(cv::
M©
 
z
, cv::M© 
x
, &
≥ak_vÆue
);

119 
åaö
(
cv
::
M©
 
x
, 
åaö_öãΩ_Á˘‹
);

122 
	mcv
::
M©
 
gaussünC‹ªœti⁄
(
cv
::M© 
x1
, cv::M© 
x2
);

125 
	mcv
::
M©
 
¸óãGaussünPók
(
sizey
, 
sizex
);

128 
	mcv
::
M©
 
gëFótuªs
(c⁄° 
cv
::M© & 
image
, 
boﬁ
 
öôh™n
, 
sˇÀ_adju°
 = 1.0f);

131 
¸óãH™nögM©s
();

134 
subPixñPók
(
À·
, 
˚¡î
, 
right
);

136 
	mcv
::
M©
 
_Æphaf
;

137 
	mcv
::
M©
 
_¥ob
;

138 
	mcv
::
M©
 
_tm∂
;

139 
	mcv
::
M©
 
_num
;

140 
	mcv
::
M©
 
_dí
;

141 
	mcv
::
M©
 
_œbCíåoids
;

143 
	m¥iv©e
:

144 
size_∑tch
[3];

145 
	mcv
::
M©
 
h™n
;

146 
	mcv
::
Size
 
_tm∂_sz
;

147 
	m_sˇÀ
;

148 
	m_gaussün_size
;

149 
boﬁ
 
	m_hog„©uªs
;

150 
boﬁ
 
	m_œb„©uªs
;

	@src/labdata.hpp

1 c⁄° 
	gnClu°îs
 = 15;

2 
	gd©a
[
nClu°îs
][3] = {

	@src/recttools.hpp

36 #¥agm®
⁄˚


39 
	~<m©h.h
>

41 #i‚de‡
_OPENCV_RECTTOOLS_HPP_


42 
	#_OPENCV_RECTTOOLS_HPP_


	)

45 
«me•a˚
 
	gRe˘Toﬁs


48 
	gãm∂©e
 <
ty≥«me
 
	gt
>

49 
ölöe
 
	gcv
::
Vec
<
t
, 2 > 
˚¡î
(c⁄° 
cv
::
Re˘_
<t> &
ª˘
)

51  
cv
::
Vec
<
t
, 2 > (
	gª˘
.
	gx
 +Ñe˘.
	gwidth
 / (
	gt
Ë2,Ñe˘.
	gy
 +Ñe˘.
	gheight
 / (t) 2);

54 
	gãm∂©e
 <
ty≥«me
 
	gt
>

55 
ölöe
 
t
 
x2
(c⁄° 
cv
::
Re˘_
<t> &
ª˘
)

57  
ª˘
.
x
 +Ñe˘.
width
;

60 
	gãm∂©e
 <
ty≥«me
 
	gt
>

61 
ölöe
 
t
 
y2
(c⁄° 
cv
::
Re˘_
<t> &
ª˘
)

63  
ª˘
.
y
 +Ñe˘.
height
;

66 
	gãm∂©e
 <
ty≥«me
 
	gt
>

67 
ölöe
 
ªsize
(
cv
::
Re˘_
<
t
> &
ª˘
, 
sˇÀx
, 
sˇÀy
 = 0)

69 i‡(!
sˇÀy
)sˇÀy = 
sˇÀx
;

70 
	gª˘
.
	gx
 -
ª˘
.
width
 * (
sˇÀx
 - 1.f) / 2.f;

71 
	gª˘
.
	gwidth
 *
sˇÀx
;

73 
	gª˘
.
	gy
 -
ª˘
.
height
 * (
sˇÀy
 - 1.f) / 2.f;

74 
	gª˘
.
	gheight
 *
sˇÀy
;

78 
	gãm∂©e
 <
ty≥«me
 
	gt
>

79 
ölöe
 
limô
(
cv
::
Re˘_
<
t
> &
ª˘
, cv::Rect_<t>Üimit)

81 i‡(
ª˘
.
x
 +Ñe˘.
width
 > 
limô
.x +Üimit.width)rect.width = (limit.x +Üimit.width -Ñect.x);

82 i‡(
	gª˘
.
	gy
 +Ñe˘.
	gheight
 > 
	glimô
.y +Üimô.heightÏe˘.heighà(
limô
.
y
 +Üimô.
height
 - 
ª˘
.y);

83 i‡(
	gª˘
.
	gx
 < 
	glimô
.x)

85 
	gª˘
.
	gwidth
 -(
limô
.
x
 - 
ª˘
.x);

86 
	gª˘
.
	gx
 = 
limô
.
x
;

88 i‡(
	gª˘
.
	gy
 < 
	glimô
.y)

90 
	gª˘
.
	gheight
 -(
limô
.
y
 - 
ª˘
.y);

91 
	gª˘
.
	gy
 = 
limô
.
y
;

93 if(
	gª˘
.
	gwidth
<0)rect.width=0;

94 if(
	gª˘
.
	gheight
<0)rect.height=0;

97 
	gãm∂©e
 <
ty≥«me
 
	gt
>

98 
ölöe
 
limô
(
cv
::
Re˘_
<
t
> &
ª˘
,Å 
width
,Å 
height
,Å 
x
 = 0,Å 
y
 = 0)

100 
limô
(
ª˘
, 
cv
::
Re˘_
<
t
 > (
x
, 
y
, 
width
, 
height
));

103 
	gãm∂©e
 <
ty≥«me
 
	gt
>

104 
ölöe
 
	gcv
::
Re˘
 
gëB‹dî
(c⁄° 
cv
::
Re˘_
<
t
 > &
‹igöÆ
, cv::Re˘_<à> & 
limôed
)

106 
cv
::
Re˘_
<
t
 > 
ªs
;

107 
	gªs
.
	gx
 = 
limôed
.
x
 - 
‹igöÆ
.x;

108 
	gªs
.
	gy
 = 
limôed
.
y
 - 
‹igöÆ
.y;

109 
	gªs
.
	gwidth
 = 
x2
(
‹igöÆ
Ë- x2(
limôed
);

110 
	gªs
.
	gheight
 = 
y2
(
‹igöÆ
Ë- y2(
limôed
);

111 
as£π
(
ªs
.
x
 >0 &&Ñes.
y
 >0 &&Ñes.
width
 >0 &&Ñes.
height
 >= 0);

112  
	gªs
;

115 
ölöe
 
	gcv
::
M©
 
subwödow
(c⁄° 
cv
::M© &
ö
, c⁄° cv::
Re˘
 & 
wödow
, 
b‹dîTy≥
 = cv::
BORDER_CONSTANT
)

117 
cv
::
Re˘
 
cutWödow
 = 
wödow
;

118 
	gRe˘Toﬁs
::
limô
(
cutWödow
, 
ö
.
cﬁs
, in.
rows
);

119 i‡(
	gcutWödow
.
	gheight
 <0 || 
cutWödow
.
width
 <0)
as£π
(0);

120 
	gcv
::
Re˘
 
b‹dî
 = 
Re˘Toﬁs
::
gëB‹dî
(
wödow
, 
cutWödow
);

121 
	gcv
::
M©
 
ªs
 = 
ö
(
cutWödow
);

123 i‡(
	gb‹dî
 !
cv
::
Re˘
(0, 0, 0, 0))

125 
	gcv
::
c›yMakeB‹dî
(
ªs
,Ñes, 
b‹dî
.
y
, b‹dî.
height
, b‹dî.
x
, b‹dî.
width
, 
b‹dîTy≥
);

127  
	gªs
;

130 
ölöe
 
	gcv
::
M©
 
gëGøyImage
(
cv
::M© 
img
)

132 
cv
::
cvtCﬁ‹
(
img
, img, 
CV_BGR2GRAY
);

133 
	gimg
.
c⁄vîtTo
(
img
, 
CV_32F
, 1 / 255.f);

134  
	gimg
;

	@src/runtracker.cpp

1 
	~<io°ªam
>

2 
	~<f°ªam
>

3 
	~<s°ªam
>

4 
	~<Æg‹ôhm
>

5 
	~<dúít.h
>

7 
	~<ros/ros.h
>

8 
	~<image_å™•‹t/image_å™•‹t.h
>

9 
	~<cv_bridge/cv_bridge.h
>

10 
	~<£ns‹_msgs/image_ícodögs.h
>

11 
	~"geomëry_msgs/Twi°.h
"

13 
	~<›ícv2/c‹e/c‹e.hµ
>

14 
	~<›ícv2/highgui/highgui.hµ
>

16 
	~"kc·øckî.hµ
"

18 c⁄° 
	g°d
::
°rög
 
RGB_WINDOW
 = "RGB Image window";

21 
	#Max_löór_•ìd
 0.4

	)

22 
	#Mö_löór_•ìd
 0.2

	)

23 
	#Mö_di°™˚
 1.2

	)

24 
	#Max_di°™˚
 1.6

	)

25 
	#Max_rŸ©i⁄_•ìd
 0.3

	)

27 
	glöór_•ìd
 = 0;

28 
	grŸ©i⁄_•ìd
 = 0;

30 
	gk_löór_•ìd
 = (
Max_löór_•ìd
 - 
Mö_löór_•ìd
Ë/ (
Max_di°™˚
 - 
Mö_di°™˚
);

31 
	gh_löór_•ìd
 = 
Mö_löór_•ìd
 - 
k_löór_•ìd
 * 
Mö_di°™˚
;

33 
	gk_rŸ©i⁄_•ìd
 = 0.004;

34 
	gh_rŸ©i⁄_•ìd_À·
 = 1.2;

35 
	gh_rŸ©i⁄_•ìd_right
 = 1.36;

37 
	gERROR_OFFSET_X_À·1
 = 100;

38 
	gERROR_OFFSET_X_À·2
 = 300;

39 
	gERROR_OFFSET_X_right1
 = 340;

40 
	gERROR_OFFSET_X_right2
 = 540;

42 
	gcv
::
M©
 
rgbimage
;

43 
	gcv
::
M©
 
dïthimage
;

44 
	gcv
::
Re˘
 
£À˘Re˘
;

45 
	gcv
::
Poöt
 
‹igö
;

46 
	gcv
::
Re˘
 
ªsu…
;

48 
boﬁ
 
	g£À˘_Êag
 = 
Ál£
;

49 
boﬁ
 
	gbRíewROI
 = 
Ál£
;

50 
boﬁ
 
	gbBegöKCF
 = 
Ál£
;

51 
boﬁ
 
	gíabÀ_gë_dïth
 = 
Ál£
;

53 
boﬁ
 
	gHOG
 = 
åue
;

54 
boﬁ
 
	gFIXEDWINDOW
 = 
Ál£
;

55 
boﬁ
 
	gMULTISCALE
 = 
åue
;

56 
boﬁ
 
	gSILENT
 = 
åue
;

57 
boﬁ
 
	gLAB
 = 
Ál£
;

60 
KCFTøckî
 
åackî
(
HOG
, 
FIXEDWINDOW
, 
MULTISCALE
, 
LAB
);

62 
	gdi°_vÆ
[5] ;

64 
	$⁄Mou£
(
evít
, 
x
, 
y
, , *)

66 i‡(
£À˘_Êag
)

68 
£À˘Re˘
.
x
 = 
	`MIN
(
‹igö
.x, x);

69 
£À˘Re˘
.
y
 = 
	`MIN
(
‹igö
.y, y);

70 
£À˘Re˘
.
width
 = 
	`abs
(
x
 - 
‹igö
.x);

71 
£À˘Re˘
.
height
 = 
	`abs
(
y
 - 
‹igö
.y);

72 
£À˘Re˘
 &
cv
::
	`Re˘
(0, 0, 
rgbimage
.
cﬁs
,Ñgbimage.
rows
);

74 i‡(
evít
 =
CV_EVENT_LBUTTONDOWN
)

76 
bBegöKCF
 = 
Ál£
;

77 
£À˘_Êag
 = 
åue
;

78 
‹igö
 = 
cv
::
	`Poöt
(
x
, 
y
);

79 
£À˘Re˘
 = 
cv
::
	`Re˘
(
x
, 
y
, 0, 0);

81 i‡(
evít
 =
CV_EVENT_LBUTTONUP
)

83 
£À˘_Êag
 = 
Ál£
;

84 
bRíewROI
 = 
åue
;

86 
	}
}

88 ˛as†
	cImageC⁄vîãr


90 
	mros
::
NodeH™dÀ
 
nh_
;

91 
	mimage_å™•‹t
::
ImageTøn•‹t
 
ô_
;

92 
	mimage_å™•‹t
::
Subs¸ibî
 
image_sub_
;

93 
	mimage_å™•‹t
::
Subs¸ibî
 
dïth_sub_
;

95 
	mpublic
:

96 
ros
::
Publishî
 
pub
;

98 
	$ImageC⁄vîãr
()

99 : 
	$ô_
(
nh_
)

102 
image_sub_
 = 
ô_
.
	`subs¸ibe
("/camera/rgb/image_raw", 1,

103 &
ImageC⁄vîãr
::
imageCb
, 
this
);

104 
dïth_sub_
 = 
ô_
.
	`subs¸ibe
("/camera/depth/image", 1,

105 &
ImageC⁄vîãr
::
dïthCb
, 
this
);

106 
pub
 = 
nh_
.
advîti£
<
geomëry_msgs
::
Twi°
>("/cmd_vel", 1000);

108 
cv
::
	`«medWödow
(
RGB_WINDOW
);

112 ~
	$ImageC⁄vîãr
()

114 
cv
::
	`de°royWödow
(
RGB_WINDOW
);

116 
	}
}

118 
	$imageCb
(c⁄° 
£ns‹_msgs
::
ImageC⁄°På
& 
msg
)

120 
cv_bridge
::
CvImagePå
 
cv_±r
;

121 
åy


123 
cv_±r
 = 
cv_bridge
::
	`toCvC›y
(
msg
, 
£ns‹_msgs
::
image_ícodögs
::
BGR8
);

125 
	`ˇtch
 (
cv_bridge
::
Ex˚±i⁄
& 
e
)

127 
	`ROS_ERROR
("cv_bridgêex˚±i⁄: %s", 
e
.
	`wh©
());

131 
cv_±r
->
image
.
	`c›yTo
(
rgbimage
);

133 
cv
::
	`£tMou£CÆlback
(
RGB_WINDOW
, 
⁄Mou£
, 0);

135 if(
bRíewROI
){

136 
åackî
.
	`öô
(
£À˘Re˘
, 
rgbimage
);

137 
bBegöKCF
 = 
åue
;

138 
bRíewROI
 = 
Ál£
;

139 
íabÀ_gë_dïth
 = 
Ál£
;

142 if(
bBegöKCF
){

143 
ªsu…
 = 
åackî
.
	`upd©e
(
rgbimage
);

144 
cv
::
	`ª˘™gÀ
(
rgbimage
, 
ªsu…
, cv::
	`Sˇœr
( 0, 255, 255 ), 1, 8 );

145 
íabÀ_gë_dïth
 = 
åue
;

148 
cv
::
	`ª˘™gÀ
(
rgbimage
, 
£À˘Re˘
, cv::
	`Sˇœr
(255, 0, 0), 2, 8, 0);

150 
cv
::
	`imshow
(
RGB_WINDOW
, 
rgbimage
);

151 
cv
::
	`waôKey
(1);

152 
	}
}

154 
	$dïthCb
(c⁄° 
£ns‹_msgs
::
ImageC⁄°På
& 
msg
)

156 
cv_bridge
::
CvImagePå
 
cv_±r
;

157 
åy
{

158 
cv_±r
 = 
cv_bridge
::
	`toCvC›y
(
msg
,
£ns‹_msgs
::
image_ícodögs
::
TYPE_32FC1
);

159 
cv_±r
->
image
.
	`c›yTo
(
dïthimage
);

160 }
	`ˇtch
 (
cv_bridge
::
Ex˚±i⁄
& 
e
){

161 
	`ROS_ERROR
("CouldÇŸ c⁄vîà‰om '%s'Åÿ'TYPE_32FC1'.", 
msg
->
ícodög
.
	`c_°r
());

164 if(
íabÀ_gë_dïth
) {

165 
di°_vÆ
[0] = 
dïthimage
.
©
<>(
ªsu…
.
y
+ªsu….
height
/3 ,Ñesu….
x
+ªsu….
width
/3) ;

166 
di°_vÆ
[1] = 
dïthimage
.
©
<>(
ªsu…
.
y
+ªsu….
height
/3 ,Ñesu….
x
+2*ªsu….
width
/3) ;

167 
di°_vÆ
[2] = 
dïthimage
.
©
<>(
ªsu…
.
y
+2*ªsu….
height
/3 ,Ñesu….
x
+ªsu….
width
/3) ;

168 
di°_vÆ
[3] = 
dïthimage
.
©
<>(
ªsu…
.
y
+2*ªsu….
height
/3 ,Ñesu….
x
+2*ªsu….
width
/3) ;

169 
di°_vÆ
[4] = 
dïthimage
.
©
<>(
ªsu…
.
y
+ªsu….
height
/2 ,Ñesu….
x
+ªsu….
width
/2) ;

171 
di°™˚
 = 0;

172 
num_dïth_poöts
 = 5;

173 
i
 = 0; i < 5; i++){

174 if(
di°_vÆ
[
i
] > 0.4 && dist_val[i] < 10.0)

175 
di°™˚
 +
di°_vÆ
[
i
];

177 
num_dïth_poöts
--;

179 
di°™˚
 /
num_dïth_poöts
;

182 if(
di°™˚
 > 
Mö_di°™˚
)

183 
löór_•ìd
 = 
di°™˚
 * 
k_löór_•ìd
 + 
h_löór_•ìd
;

185 
löór_•ìd
 = 0;

187 if(
löór_•ìd
 > 
Max_löór_•ìd
)

188 
löór_•ìd
 = 
Max_löór_•ìd
;

191 
˚¡î_x
 = 
ªsu…
.
x
 +Ñesu….
width
/2;

192 if(
˚¡î_x
 < 
ERROR_OFFSET_X_À·1
)

193 
rŸ©i⁄_•ìd
 = 
Max_rŸ©i⁄_•ìd
;

194 if(
˚¡î_x
 > 
ERROR_OFFSET_X_À·1
 && cíãr_x < 
ERROR_OFFSET_X_À·2
)

195 
rŸ©i⁄_•ìd
 = -
k_rŸ©i⁄_•ìd
 * 
˚¡î_x
 + 
h_rŸ©i⁄_•ìd_À·
;

196 if(
˚¡î_x
 > 
ERROR_OFFSET_X_right1
 && cíãr_x < 
ERROR_OFFSET_X_right2
)

197 
rŸ©i⁄_•ìd
 = -
k_rŸ©i⁄_•ìd
 * 
˚¡î_x
 + 
h_rŸ©i⁄_•ìd_right
;

198 if(
˚¡î_x
 > 
ERROR_OFFSET_X_right2
)

199 
rŸ©i⁄_•ìd
 = -
Max_rŸ©i⁄_•ìd
;

201 
rŸ©i⁄_•ìd
 = 0;

203 
°d
::
cout
 << "löór_•ìd = " << 
löór_•ìd
 << "ÑŸ©i⁄_•ìd = " << 
rŸ©i⁄_•ìd
 << std::
ídl
;

205 
°d
::
cout
 << 
di°_vÆ
[0] << " / " << di°_vÆ[1] << " / " << di°_vÆ[2] << " / " << di°_vÆ[3] << " / " << di°_vÆ[4] << std::
ídl
;

206 
°d
::
cout
 << "di°™˚ = " << 
di°™˚
 << std::
ídl
;

209 
cv
::
	`waôKey
(1);

210 
	}
}

213 
	$maö
(
¨gc
, ** 
¨gv
)

215 
ros
::
	`öô
(
¨gc
, 
¨gv
, "riki_kcf_tracker");

216 
ImageC⁄vîãr
 
ic
;

218 
ros
::
	`ok
()){

219 
ros
::
	`•öOn˚
();

221 
geomëry_msgs
::
Twi°
 
twi°
;

222 
twi°
.
löór
.
x
 = 
löór_•ìd
;

223 
twi°
.
löór
.
y
 = 0;

224 
twi°
.
löór
.
z
 = 0;

225 
twi°
.
™guœr
.
x
 = 0;

226 
twi°
.
™guœr
.
y
 = 0;

227 
twi°
.
™guœr
.
z
 = 
rŸ©i⁄_•ìd
;

228 
ic
.
pub
.
	`publish
(
twi°
);

230 i‡(
	`cvWaôKey
(33) == 'q')

235 
	}
}

	@src/tracker.h

19 #¥agm®
⁄˚


21 
	~<›ícv2/›ícv.hµ
>

22 
	~<°rög
>

24 ˛as†
	cTøckî


26 
	mpublic
:

27 
	$Tøckî
() {}

28 
vútuÆ
 ~
	$Tøckî
(Ë{ 
	}
}

30 
vútuÆ
 
öô
(c⁄° 
cv
::
Re˘
 &
roi
, cv::
M©
 
image
) = 0;

31 
vútuÆ
 
	gcv
::
Re˘
 
upd©e
–
cv
::
M©
 
image
)=0;

34 
	g¥Ÿe˘ed
:

35 
cv
::
Re˘_
<> 
_roi
;

	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡
deföed
 
__USE_MISC
 && !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_MISC


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_POSIX


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
)

194 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #ifde‡
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #ifde‡
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

254 #i‚de‡
__USE_FILE_OFFSET64


255 
	$sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

256 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

257 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

258 (*
__cmp
Ë(c⁄° 
dúít
 **,

259 c⁄° 
dúít
 **))

260 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
sˇndú
,

264 (c⁄° *
__ª°ri˘
 
__dú
,

265 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

266 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

267 (*
__cmp
Ë(c⁄° 
dúít
 **,

268 c⁄° 
dúít
 **)),

269 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

271 
	#sˇndú
 
sˇndú64


	)

275 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


278 
	$sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

279 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

280 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

281 (*
__cmp
Ë(c⁄° 
dúít64
 **,

282 c⁄° 
dúít64
 **))

283 
	`__n⁄nuŒ
 ((1, 2));

286 #ifde‡
__USE_GNU


292 #i‚de‡
__USE_FILE_OFFSET64


293 
	$sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

294 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

295 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

296 (*
__cmp
Ë(c⁄° 
dúít
 **,

297 c⁄° 
dúít
 **))

298 
	`__n⁄nuŒ
 ((2, 3));

300 #ifde‡
__REDIRECT


301 
	`__REDIRECT
 (
sˇndú©
,

302 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

303 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

304 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

305 (*
__cmp
Ë(c⁄° 
dúít
 **,

306 c⁄° 
dúít
 **)),

307 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

309 
	#sˇndú©
 
sˇndú©64


	)

315 
	$sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

316 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

317 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

318 (*
__cmp
Ë(c⁄° 
dúít64
 **,

319 c⁄° 
dúít64
 **))

320 
	`__n⁄nuŒ
 ((2, 3));

324 #i‚de‡
__USE_FILE_OFFSET64


325 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

326 c⁄° 
dúít
 **
__e2
)

327 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 #ifde‡
__REDIRECT


330 
	`__REDIRECT_NTH
 (
Æphas‹t
,

331 (c⁄° 
dúít
 **
__e1
,

332 c⁄° 
dúít
 **
__e2
),

333 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	#Æphas‹t
 
Æphas‹t64


	)

339 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


340 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

341 c⁄° 
dúít64
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

347 #ifde‡
__USE_MISC


352 #i‚de‡
__USE_FILE_OFFSET64


353 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

354 
size_t
 
__nbyãs
,

355 
__off_t
 *
__ª°ri˘
 
__ba£p
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

358 #ifde‡
__REDIRECT


359 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

360 (
__fd
, *
__ª°ri˘
 
__buf
,

361 
size_t
 
__nbyãs
,

362 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

363 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

365 
	#gëdúíåõs
 
gëdúíåõs64


	)

369 #ifde‡
__USE_LARGEFILE64


370 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

371 
size_t
 
__nbyãs
,

372 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

373 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

377 #ifde‡
__USE_GNU


379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

381 c⁄° 
dúít
 **
__e2
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

384 #ifde‡
__REDIRECT


385 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

386 (c⁄° 
dúít
 **
__e1
,

387 c⁄° 
dúít
 **
__e2
),

388 
vîsi⁄s‹t64
)

389 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

391 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

397 c⁄° 
dúít64
 **
__e2
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

402 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 #i‡
deföed
 
log
 && deföed 
__GNUC__


30 #w¨nög 
A
 
ma¸o
 
ˇŒed
 
log
 
was
 
Æªady
 
deföed
 
whí
 <
m©h
.
h
> wa†
ö˛uded
.

31 #w¨nög 
This
 
wûl
 
ˇu£
 
compû©i⁄
 
¥obÀms
.

34 
	g__BEGIN_DECLS


37 
	~<bôs/ty≥s.h
>

40 
	~<bôs/m©h-ve˘‹.h
>

43 
	~<bôs/Êﬂä.h
>

47 #i‡
__GNUC_PREREQ
 (3, 3)

48 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
 ())

	)

55 
	#HUGE_VAL
 1e10000

	)

57 #ifde‡
__USE_ISOC99


58 #i‡
__GNUC_PREREQ
 (3, 3)

59 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
 ())

	)

60 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
 ())

	)

62 
	#HUGE_VALF
 1e10000f

	)

63 
	#HUGE_VALL
 1e10000L

	)

66 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

67 
	#HUGE_VAL_F16
 (
	`__buûtö_huge_vÆf16
 ())

	)

69 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

70 
	#HUGE_VAL_F32
 (
	`__buûtö_huge_vÆf32
 ())

	)

72 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

73 
	#HUGE_VAL_F64
 (
	`__buûtö_huge_vÆf64
 ())

	)

75 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

76 
	#HUGE_VAL_F128
 (
	`__buûtö_huge_vÆf128
 ())

	)

78 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

79 
	#HUGE_VAL_F32X
 (
	`__buûtö_huge_vÆf32x
 ())

	)

81 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

82 
	#HUGE_VAL_F64X
 (
	`__buûtö_huge_vÆf64x
 ())

	)

84 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

85 
	#HUGE_VAL_F128X
 (
	`__buûtö_huge_vÆf128x
 ())

	)

88 #ifde‡
__USE_ISOC99


90 #i‡
__GNUC_PREREQ
 (3, 3)

91 
	#INFINITY
 (
	`__buûtö_öff
 ())

	)

93 
	#INFINITY
 
HUGE_VALF


	)

97 #i‡
__GNUC_PREREQ
 (3, 3)

98 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

103 
	#NAN
 (0.0‡/ 0.0f)

	)

107 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

109 #i‡
__GNUC_PREREQ
 (3, 3)

110 
	#SNANF
 (
	`__buûtö_«nsf
 (""))

	)

111 
	#SNAN
 (
	`__buûtö_«ns
 (""))

	)

112 
	#SNANL
 (
	`__buûtö_«n¶
 (""))

	)

115 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

116 
	#SNANF16
 (
	`__buûtö_«nsf16
 (""))

	)

118 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

119 
	#SNANF32
 (
	`__buûtö_«nsf32
 (""))

	)

121 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

122 
	#SNANF64
 (
	`__buûtö_«nsf64
 (""))

	)

124 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

125 
	#SNANF128
 (
	`__buûtö_«nsf128
 (""))

	)

127 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

128 
	#SNANF32X
 (
	`__buûtö_«nsf32x
 (""))

	)

130 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

131 
	#SNANF64X
 (
	`__buûtö_«nsf64x
 (""))

	)

133 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
	#SNANF128X
 (
	`__buûtö_«nsf128x
 (""))

	)

138 
	~<bôs/Êt-evÆ-mëhod.h
>

140 #ifde‡
__USE_ISOC99


148 #i‡
__GLIBC_FLT_EVAL_METHOD
 == 0 || __GLIBC_FLT_EVAL_METHOD == 16

149 
	tÊﬂt_t
;

150 
	tdoubÀ_t
;

151 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 1

152 
	tÊﬂt_t
;

153 
	tdoubÀ_t
;

154 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 2

155 
	tÊﬂt_t
;

156 
	tdoubÀ_t
;

157 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 32

158 
_Flﬂt32
 
	tÊﬂt_t
;

159 
	tdoubÀ_t
;

160 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 33

161 
_Flﬂt32x
 
	tÊﬂt_t
;

162 
_Flﬂt32x
 
	tdoubÀ_t
;

163 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 64

164 
_Flﬂt64
 
	tÊﬂt_t
;

165 
_Flﬂt64
 
	tdoubÀ_t
;

166 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 65

167 
_Flﬂt64x
 
	tÊﬂt_t
;

168 
_Flﬂt64x
 
	tdoubÀ_t
;

169 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 128

170 
_Flﬂt128
 
	tÊﬂt_t
;

171 
_Flﬂt128
 
	tdoubÀ_t
;

172 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 129

173 
_Flﬂt128x
 
	tÊﬂt_t
;

174 
_Flﬂt128x
 
	tdoubÀ_t
;

190 
	~<bôs/Â-logb.h
>

191 #ifde‡
__USE_ISOC99


192 #i‡
__FP_LOGB0_IS_MIN


193 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

195 
	#FP_ILOGB0
 (-2147483647)

	)

197 #i‡
__FP_LOGBNAN_IS_MIN


198 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

200 
	#FP_ILOGBNAN
 2147483647

	)

203 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

204 #i‡
__WORDSIZE
 == 32

205 
	#__FP_LONG_MAX
 0x7fffffffL

	)

207 
	#__FP_LONG_MAX
 0x7fffffffffffffffL

	)

209 #i‡
__FP_LOGB0_IS_MIN


210 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
 - 1)

	)

212 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
)

	)

214 #i‡
__FP_LOGBNAN_IS_MIN


215 
	#FP_LLOGBNAN
 (-
__FP_LONG_MAX
 - 1)

	)

217 
	#FP_LLOGBNAN
 
__FP_LONG_MAX


	)

233 
	~<bôs/Â-Á°.h
>

235 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

239 
	mFP_INT_UPWARD
 =

240 
	#FP_INT_UPWARD
 0

	)

241 
FP_INT_UPWARD
,

242 
	mFP_INT_DOWNWARD
 =

243 
	#FP_INT_DOWNWARD
 1

	)

244 
FP_INT_DOWNWARD
,

245 
	mFP_INT_TOWARDZERO
 =

246 
	#FP_INT_TOWARDZERO
 2

	)

247 
FP_INT_TOWARDZERO
,

248 
	mFP_INT_TONEARESTFROMZERO
 =

249 
	#FP_INT_TONEARESTFROMZERO
 3

	)

250 
FP_INT_TONEARESTFROMZERO
,

251 
	mFP_INT_TONEAREST
 =

252 
	#FP_INT_TONEAREST
 4

	)

253 
FP_INT_TONEAREST
,

262 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

264 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

265 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

266 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

268 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

269 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

270 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

272 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

273 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

274 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

275 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

276 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

277 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

278 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

279 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

280 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

281 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

282 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

283 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

285 
	#_MdoubÀ_
 

	)

286 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

287 
	#__MATH_DECLARING_DOUBLE
 1

	)

288 
	#__MATH_DECLARING_FLOATN
 0

	)

289 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

290 
	~<bôs/m©hˇŒs.h
>

291 #unde‡
_MdoubÀ_


292 #unde‡
__MATH_PRECNAME


293 #unde‡
__MATH_DECLARING_DOUBLE


294 #unde‡
__MATH_DECLARING_FLOATN


296 #ifde‡
__USE_ISOC99


302 
	#_MdoubÀ_
 

	)

303 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

304 
	#__MATH_DECLARING_DOUBLE
 0

	)

305 
	#__MATH_DECLARING_FLOATN
 0

	)

306 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

307 
	~<bôs/m©hˇŒs.h
>

308 #unde‡
_MdoubÀ_


309 #unde‡
__MATH_PRECNAME


310 #unde‡
__MATH_DECLARING_DOUBLE


311 #unde‡
__MATH_DECLARING_FLOATN


313 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

314 || 
deföed
 
__LDBL_COMPAT
 \

315 || 
deföed
 
_LIBC_TEST


316 #ifde‡
__LDBL_COMPAT


318 #ifde‡
__USE_ISOC99


319 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

321 #ifde‡
__REDIRECT_NTH


322 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

323 
__∆dbl_√xâow¨df
)

324 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

326 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

327 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

328 (
__x
, 
__y
),

329 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

333 #unde‡
__MATHDECL_1


334 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

335 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

336 
¨gs
, 
Æüs
)

	)

337 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

338 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

344 
	#_MdoubÀ_
 

	)

345 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

346 
	#__MATH_DECLARING_DOUBLE
 0

	)

347 
	#__MATH_DECLARING_FLOATN
 0

	)

348 
	#__MATH_DECLARE_LDOUBLE
 1

	)

349 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

350 
	~<bôs/m©hˇŒs.h
>

351 #unde‡
_MdoubÀ_


352 #unde‡
__MATH_PRECNAME


353 #unde‡
__MATH_DECLARING_DOUBLE


354 #unde‡
__MATH_DECLARING_FLOATN


363 #i‡
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)

364 
	#_MdoubÀ_
 
_Flﬂt16


	)

365 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f16
##
	)
r

366 
	#__MATH_DECLARING_DOUBLE
 0

	)

367 
	#__MATH_DECLARING_FLOATN
 1

	)

368 #i‡
__HAVE_DISTINCT_FLOAT16


369 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

371 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

372 
	~<bôs/m©hˇŒs.h
>

374 #unde‡
_MdoubÀ_


375 #unde‡
__MATH_PRECNAME


376 #unde‡
__MATH_DECLARING_DOUBLE


377 #unde‡
__MATH_DECLARING_FLOATN


380 #i‡
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)

381 
	#_MdoubÀ_
 
_Flﬂt32


	)

382 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32
##
	)
r

383 
	#__MATH_DECLARING_DOUBLE
 0

	)

384 
	#__MATH_DECLARING_FLOATN
 1

	)

385 #i‡
__HAVE_DISTINCT_FLOAT32


386 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

388 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

389 
	~<bôs/m©hˇŒs.h
>

391 #unde‡
_MdoubÀ_


392 #unde‡
__MATH_PRECNAME


393 #unde‡
__MATH_DECLARING_DOUBLE


394 #unde‡
__MATH_DECLARING_FLOATN


397 #i‡
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)

398 
	#_MdoubÀ_
 
_Flﬂt64


	)

399 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64
##
	)
r

400 
	#__MATH_DECLARING_DOUBLE
 0

	)

401 
	#__MATH_DECLARING_FLOATN
 1

	)

402 #i‡
__HAVE_DISTINCT_FLOAT64


403 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

405 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

406 
	~<bôs/m©hˇŒs.h
>

408 #unde‡
_MdoubÀ_


409 #unde‡
__MATH_PRECNAME


410 #unde‡
__MATH_DECLARING_DOUBLE


411 #unde‡
__MATH_DECLARING_FLOATN


414 #i‡
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)

415 
	#_MdoubÀ_
 
_Flﬂt128


	)

416 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128
##
	)
r

417 
	#__MATH_DECLARING_DOUBLE
 0

	)

418 
	#__MATH_DECLARING_FLOATN
 1

	)

419 #i‡
__HAVE_DISTINCT_FLOAT128


420 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

422 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

423 
	~<bôs/m©hˇŒs.h
>

425 #unde‡
_MdoubÀ_


426 #unde‡
__MATH_PRECNAME


427 #unde‡
__MATH_DECLARING_DOUBLE


428 #unde‡
__MATH_DECLARING_FLOATN


431 #i‡
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)

432 
	#_MdoubÀ_
 
_Flﬂt32x


	)

433 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32x
##
	)
r

434 
	#__MATH_DECLARING_DOUBLE
 0

	)

435 
	#__MATH_DECLARING_FLOATN
 1

	)

436 #i‡
__HAVE_DISTINCT_FLOAT32X


437 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

439 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

440 
	~<bôs/m©hˇŒs.h
>

442 #unde‡
_MdoubÀ_


443 #unde‡
__MATH_PRECNAME


444 #unde‡
__MATH_DECLARING_DOUBLE


445 #unde‡
__MATH_DECLARING_FLOATN


448 #i‡
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)

449 
	#_MdoubÀ_
 
_Flﬂt64x


	)

450 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64x
##
	)
r

451 
	#__MATH_DECLARING_DOUBLE
 0

	)

452 
	#__MATH_DECLARING_FLOATN
 1

	)

453 #i‡
__HAVE_DISTINCT_FLOAT64X


454 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

456 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

457 
	~<bôs/m©hˇŒs.h
>

459 #unde‡
_MdoubÀ_


460 #unde‡
__MATH_PRECNAME


461 #unde‡
__MATH_DECLARING_DOUBLE


462 #unde‡
__MATH_DECLARING_FLOATN


465 #i‡
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)

466 
	#_MdoubÀ_
 
_Flﬂt128x


	)

467 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128x
##
	)
r

468 
	#__MATH_DECLARING_DOUBLE
 0

	)

469 
	#__MATH_DECLARING_FLOATN
 1

	)

470 #i‡
__HAVE_DISTINCT_FLOAT128X


471 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

473 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

474 
	~<bôs/m©hˇŒs.h
>

476 #unde‡
_MdoubÀ_


477 #unde‡
__MATH_PRECNAME


478 #unde‡
__MATH_DECLARING_DOUBLE


479 #unde‡
__MATH_DECLARING_FLOATN


482 #unde‡
__MATHDECL_1


483 #unde‡
__MATHDECL


484 #unde‡
__MATHCALL


487 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


489 
signgam
;

492 #i‡(
__HAVE_DISTINCT_FLOAT16
 \

493 || 
__HAVE_DISTINCT_FLOAT32
 \

494 || 
__HAVE_DISTINCT_FLOAT64
 \

495 || 
__HAVE_DISTINCT_FLOAT32X
 \

496 || 
__HAVE_DISTINCT_FLOAT64X
 \

497 || 
__HAVE_DISTINCT_FLOAT128X
)

510 #ifde‡
__NO_LONG_DOUBLE_MATH


511 #i‡
__HAVE_DISTINCT_FLOAT128


514 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

515 ( (
TG_ARG
Ë= (Ë? 
FUNC
 ## 
f
 
ARGS
 : FUNC ARGS)

	)

516 #ñi‡
__HAVE_DISTINCT_FLOAT128


517 #i‡
__HAVE_GENERIC_SELECTION


518 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT32


519 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
Ë
_Flﬂt32
: FUNC ## 
f
 ARGS,

	)

521 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
)

	)

523 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT64X


524 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


525 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
l
 ARGS,

	)

527 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
f128
 ARGS,

	)

530 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
)

	)

532 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

533 
	`_Gíîic
 ((
TG_ARG
), \

534 : 
FUNC
 ## 
f
 
ARGS
, \

535 
	`__MATH_TG_F32
 (
FUNC
, 
ARGS
) \

536 : 
FUNC
 
ARGS
, \

537 : 
FUNC
 ## 
l
 
ARGS
, \

538 
	`__MATH_TG_F64X
 (
FUNC
, 
ARGS
) \

539 
_Flﬂt128
: 
FUNC
 ## 
f128
 
ARGS
)

	)

541 #i‡
__HAVE_FLOATN_NOT_TYPEDEF


544 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

545 
__buûtö_choo£_ex¥
 \

546 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

547 
FUNC
 ## 
f
 
ARGS
, \

548 
__buûtö_choo£_ex¥
 \

549 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

550 
FUNC
 
ARGS
, \

551 
__buûtö_choo£_ex¥
 \

552 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

553 
FUNC
 ## 
l
 
ARGS
, \

554 
FUNC
 ## 
f128
 
ARGS
)))

	)

557 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

558 ( (
TG_ARG
) ==  () \

559 ? 
FUNC
 ## 
f
 
ARGS
 \

560 :  (
TG_ARG
) ==  () \

561 ? 
FUNC
 
ARGS
 \

562 : 
FUNC
 ## 
l
 
ARGS
)

	)

566 #ifde‡
__USE_ISOC99


571 
FP_NAN
 =

572 
	#FP_NAN
 0

	)

573 
FP_NAN
,

574 
FP_INFINITE
 =

575 
	#FP_INFINITE
 1

	)

576 
FP_INFINITE
,

577 
FP_ZERO
 =

578 
	#FP_ZERO
 2

	)

579 
FP_ZERO
,

580 
FP_SUBNORMAL
 =

581 
	#FP_SUBNORMAL
 3

	)

582 
FP_SUBNORMAL
,

583 
FP_NORMAL
 =

584 
	#FP_NORMAL
 4

	)

585 
FP_NORMAL


593 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

594 && (!
deföed
 
__OPTIMIZE_SIZE__
 || deföed 
__˝lu•lus
)

601 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

602 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

604 
	#Â˛assify
(
x
Ë
	`__MATH_TG
 ((x), 
__Â˛assify
, (x))

	)

608 #i‡
	`__GNUC_PREREQ
 (6,0)

609 
	#signbô
(
x
Ë
	`__buûtö_signbô
 (x)

	)

610 #ñi‡
deföed
 
__˝lu•lus


618 
	#signbô
(
x
Ë
	`__buûtö_signbôl
 (x)

	)

619 #ñi‡
	`__GNUC_PREREQ
 (4,0)

620 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__buûtö_signbô
, (x))

	)

622 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__signbô
, (x))

	)

626 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


627 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

629 
	#isföôe
(
x
Ë
	`__MATH_TG
 ((x), 
__föôe
, (x))

	)

633 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


634 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

636 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

641 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


642 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

644 
	#i¢™
(
x
Ë
	`__MATH_TG
 ((x), 
__i¢™
, (x))

	)

648 #i‡
__HAVE_DISTINCT_FLOAT128
 && !
	`__GNUC_PREREQ
 (7,0) \

649 && !
deföed
 
__SUPPORT_SNAN__
 && !deföed 
__˝lu•lus


655 
	#isöf
(
x
) \

656 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
x
), 
_Flﬂt128
) \

657 ? 
	`__isöff128
 (
x
Ë: 
	`__buûtö_isöf_sign
 (x))

	)

658 #ñi‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


659 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

661 
	#isöf
(
x
Ë
	`__MATH_TG
 ((x), 
__isöf
, (x))

	)

665 
	#MATH_ERRNO
 1

	)

666 
	#MATH_ERREXCEPT
 2

	)

673 #ifde‡
__FAST_MATH__


674 
	#m©h_îrh™dlög
 0

	)

675 #ñi‡
deföed
 
__NO_MATH_ERRNO__


676 
	#m©h_îrh™dlög
 (
MATH_ERREXCEPT
)

	)

678 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

683 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

684 
	~<bôs/isˇn⁄iˇl.h
>

687 #i‚de‡
__˝lu•lus


688 
	#issig«lög
(
x
Ë
	`__MATH_TG
 ((x), 
__issig«lög
, (x))

	)

697 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lögf
 (__val); }

698 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lög
 (__val); }

699 
ölöe
 

700 
	`issig«lög
 (
__vÆ
)

702 #ifde‡
__NO_LONG_DOUBLE_MATH


703  
	`__issig«lög
 (
__vÆ
);

705  
	`__issig«lögl
 (
__vÆ
);

708 #i‡
__HAVE_DISTINCT_FLOAT128


709 
ölöe
 
	`issig«lög
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__issig«lögf128
 (__val); }

711 
	}
}

715 
	#issubn‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_SUBNORMAL
)

	)

718 #i‚de‡
__˝lu•lus


719 #ifde‡
__SUPPORT_SNAN__


720 
	#iszîo
(
x
Ë(
	`Â˛assify
 (xË=
FP_ZERO
)

	)

722 
	#iszîo
(
x
Ë(((
	`__ty≥of
 (x)Ë(x)Ë=0)

	)

726 #ifde‡
__SUPPORT_SNAN__


727 
ölöe
 

728 
iszîo
 (
__vÆ
)

730  
__Â˛assifyf
 (
__vÆ
Ë=
FP_ZERO
;

732 
ölöe
 

733 
iszîo
 (
__vÆ
)

735  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

737 
ölöe
 

738 
iszîo
 (
__vÆ
)

740 #ifde‡
__NO_LONG_DOUBLE_MATH


741  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

743  
__Â˛assifyl
 (
__vÆ
Ë=
FP_ZERO
;

746 #i‡
__HAVE_DISTINCT_FLOAT128


747 
ölöe
 

748 
iszîo
 (
_Flﬂt128
 
__vÆ
)

750  
__Â˛assifyf128
 (
__vÆ
Ë=
FP_ZERO
;

754 
ãm∂©e
 <
˛ass
 
__T
> 
ölöe
 
boﬁ


755 
iszîo
 (
__T
 
__vÆ
)

757  
__vÆ
 == 0;

764 #ifde‡
__USE_XOPEN


766 
	#MAXFLOAT
 3.40282347e+38F

	)

771 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


772 
	#M_E
 2.7182818284590452354

	)

773 
	#M_LOG2E
 1.4426950408889634074

	)

774 
	#M_LOG10E
 0.43429448190325182765

	)

775 
	#M_LN2
 0.69314718055994530942

	)

776 
	#M_LN10
 2.30258509299404568402

	)

777 
	#M_PI
 3.14159265358979323846

	)

778 
	#M_PI_2
 1.57079632679489661923

	)

779 
	#M_PI_4
 0.78539816339744830962

	)

780 
	#M_1_PI
 0.31830988618379067154

	)

781 
	#M_2_PI
 0.63661977236758134308

	)

782 
	#M_2_SQRTPI
 1.12837916709551257390

	)

783 
	#M_SQRT2
 1.41421356237309504880

	)

784 
	#M_SQRT1_2
 0.70710678118654752440

	)

790 #ifde‡
__USE_GNU


791 
	#M_El
 2.718281828459045235360287471352662498L

	)

792 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

793 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

794 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

795 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

796 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

797 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

798 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

799 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

800 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

801 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

802 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

803 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

806 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


807 
	#M_Ef16
 
	`__f16
 (2.718281828459045235360287471352662498Ë

	)

808 
	#M_LOG2Ef16
 
	`__f16
 (1.442695040888963407359924681001892137Ë

	)

809 
	#M_LOG10Ef16
 
	`__f16
 (0.434294481903251827651128918916605082Ë

	)

810 
	#M_LN2f16
 
	`__f16
 (0.693147180559945309417232121458176568Ë

	)

811 
	#M_LN10f16
 
	`__f16
 (2.302585092994045684017991454684364208Ë

	)

812 
	#M_PIf16
 
	`__f16
 (3.141592653589793238462643383279502884Ë

	)

813 
	#M_PI_2f16
 
	`__f16
 (1.570796326794896619231321691639751442Ë

	)

814 
	#M_PI_4f16
 
	`__f16
 (0.785398163397448309615660845819875721Ë

	)

815 
	#M_1_PIf16
 
	`__f16
 (0.318309886183790671537767526745028724Ë

	)

816 
	#M_2_PIf16
 
	`__f16
 (0.636619772367581343075535053490057448Ë

	)

817 
	#M_2_SQRTPIf16
 
	`__f16
 (1.128379167095512573896158903121545172Ë

	)

818 
	#M_SQRT2f16
 
	`__f16
 (1.414213562373095048801688724209698079Ë

	)

819 
	#M_SQRT1_2f16
 
	`__f16
 (0.707106781186547524400844362104849039Ë

	)

822 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


823 
	#M_Ef32
 
	`__f32
 (2.718281828459045235360287471352662498Ë

	)

824 
	#M_LOG2Ef32
 
	`__f32
 (1.442695040888963407359924681001892137Ë

	)

825 
	#M_LOG10Ef32
 
	`__f32
 (0.434294481903251827651128918916605082Ë

	)

826 
	#M_LN2f32
 
	`__f32
 (0.693147180559945309417232121458176568Ë

	)

827 
	#M_LN10f32
 
	`__f32
 (2.302585092994045684017991454684364208Ë

	)

828 
	#M_PIf32
 
	`__f32
 (3.141592653589793238462643383279502884Ë

	)

829 
	#M_PI_2f32
 
	`__f32
 (1.570796326794896619231321691639751442Ë

	)

830 
	#M_PI_4f32
 
	`__f32
 (0.785398163397448309615660845819875721Ë

	)

831 
	#M_1_PIf32
 
	`__f32
 (0.318309886183790671537767526745028724Ë

	)

832 
	#M_2_PIf32
 
	`__f32
 (0.636619772367581343075535053490057448Ë

	)

833 
	#M_2_SQRTPIf32
 
	`__f32
 (1.128379167095512573896158903121545172Ë

	)

834 
	#M_SQRT2f32
 
	`__f32
 (1.414213562373095048801688724209698079Ë

	)

835 
	#M_SQRT1_2f32
 
	`__f32
 (0.707106781186547524400844362104849039Ë

	)

838 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


839 
	#M_Ef64
 
	`__f64
 (2.718281828459045235360287471352662498Ë

	)

840 
	#M_LOG2Ef64
 
	`__f64
 (1.442695040888963407359924681001892137Ë

	)

841 
	#M_LOG10Ef64
 
	`__f64
 (0.434294481903251827651128918916605082Ë

	)

842 
	#M_LN2f64
 
	`__f64
 (0.693147180559945309417232121458176568Ë

	)

843 
	#M_LN10f64
 
	`__f64
 (2.302585092994045684017991454684364208Ë

	)

844 
	#M_PIf64
 
	`__f64
 (3.141592653589793238462643383279502884Ë

	)

845 
	#M_PI_2f64
 
	`__f64
 (1.570796326794896619231321691639751442Ë

	)

846 
	#M_PI_4f64
 
	`__f64
 (0.785398163397448309615660845819875721Ë

	)

847 
	#M_1_PIf64
 
	`__f64
 (0.318309886183790671537767526745028724Ë

	)

848 
	#M_2_PIf64
 
	`__f64
 (0.636619772367581343075535053490057448Ë

	)

849 
	#M_2_SQRTPIf64
 
	`__f64
 (1.128379167095512573896158903121545172Ë

	)

850 
	#M_SQRT2f64
 
	`__f64
 (1.414213562373095048801688724209698079Ë

	)

851 
	#M_SQRT1_2f64
 
	`__f64
 (0.707106781186547524400844362104849039Ë

	)

854 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


855 
	#M_Ef128
 
	`__f128
 (2.718281828459045235360287471352662498Ë

	)

856 
	#M_LOG2Ef128
 
	`__f128
 (1.442695040888963407359924681001892137Ë

	)

857 
	#M_LOG10Ef128
 
	`__f128
 (0.434294481903251827651128918916605082Ë

	)

858 
	#M_LN2f128
 
	`__f128
 (0.693147180559945309417232121458176568Ë

	)

859 
	#M_LN10f128
 
	`__f128
 (2.302585092994045684017991454684364208Ë

	)

860 
	#M_PIf128
 
	`__f128
 (3.141592653589793238462643383279502884Ë

	)

861 
	#M_PI_2f128
 
	`__f128
 (1.570796326794896619231321691639751442Ë

	)

862 
	#M_PI_4f128
 
	`__f128
 (0.785398163397448309615660845819875721Ë

	)

863 
	#M_1_PIf128
 
	`__f128
 (0.318309886183790671537767526745028724Ë

	)

864 
	#M_2_PIf128
 
	`__f128
 (0.636619772367581343075535053490057448Ë

	)

865 
	#M_2_SQRTPIf128
 
	`__f128
 (1.128379167095512573896158903121545172Ë

	)

866 
	#M_SQRT2f128
 
	`__f128
 (1.414213562373095048801688724209698079Ë

	)

867 
	#M_SQRT1_2f128
 
	`__f128
 (0.707106781186547524400844362104849039Ë

	)

870 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


871 
	#M_Ef32x
 
	`__f32x
 (2.718281828459045235360287471352662498Ë

	)

872 
	#M_LOG2Ef32x
 
	`__f32x
 (1.442695040888963407359924681001892137Ë

	)

873 
	#M_LOG10Ef32x
 
	`__f32x
 (0.434294481903251827651128918916605082Ë

	)

874 
	#M_LN2f32x
 
	`__f32x
 (0.693147180559945309417232121458176568Ë

	)

875 
	#M_LN10f32x
 
	`__f32x
 (2.302585092994045684017991454684364208Ë

	)

876 
	#M_PIf32x
 
	`__f32x
 (3.141592653589793238462643383279502884Ë

	)

877 
	#M_PI_2f32x
 
	`__f32x
 (1.570796326794896619231321691639751442Ë

	)

878 
	#M_PI_4f32x
 
	`__f32x
 (0.785398163397448309615660845819875721Ë

	)

879 
	#M_1_PIf32x
 
	`__f32x
 (0.318309886183790671537767526745028724Ë

	)

880 
	#M_2_PIf32x
 
	`__f32x
 (0.636619772367581343075535053490057448Ë

	)

881 
	#M_2_SQRTPIf32x
 
	`__f32x
 (1.128379167095512573896158903121545172Ë

	)

882 
	#M_SQRT2f32x
 
	`__f32x
 (1.414213562373095048801688724209698079Ë

	)

883 
	#M_SQRT1_2f32x
 
	`__f32x
 (0.707106781186547524400844362104849039Ë

	)

886 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


887 
	#M_Ef64x
 
	`__f64x
 (2.718281828459045235360287471352662498Ë

	)

888 
	#M_LOG2Ef64x
 
	`__f64x
 (1.442695040888963407359924681001892137Ë

	)

889 
	#M_LOG10Ef64x
 
	`__f64x
 (0.434294481903251827651128918916605082Ë

	)

890 
	#M_LN2f64x
 
	`__f64x
 (0.693147180559945309417232121458176568Ë

	)

891 
	#M_LN10f64x
 
	`__f64x
 (2.302585092994045684017991454684364208Ë

	)

892 
	#M_PIf64x
 
	`__f64x
 (3.141592653589793238462643383279502884Ë

	)

893 
	#M_PI_2f64x
 
	`__f64x
 (1.570796326794896619231321691639751442Ë

	)

894 
	#M_PI_4f64x
 
	`__f64x
 (0.785398163397448309615660845819875721Ë

	)

895 
	#M_1_PIf64x
 
	`__f64x
 (0.318309886183790671537767526745028724Ë

	)

896 
	#M_2_PIf64x
 
	`__f64x
 (0.636619772367581343075535053490057448Ë

	)

897 
	#M_2_SQRTPIf64x
 
	`__f64x
 (1.128379167095512573896158903121545172Ë

	)

898 
	#M_SQRT2f64x
 
	`__f64x
 (1.414213562373095048801688724209698079Ë

	)

899 
	#M_SQRT1_2f64x
 
	`__f64x
 (0.707106781186547524400844362104849039Ë

	)

902 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


909 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


910 
	#__NO_MATH_INLINES
 1

	)

913 #ifde‡
__USE_ISOC99


914 #i‡
__GNUC_PREREQ
 (3, 1)

921 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

922 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

923 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

924 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

925 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

926 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
(x, y)

	)

928 
	#isgª©î
(
x
, 
y
) \

929 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

930 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; }))

	)

931 
	#isgª©îequÆ
(
x
, 
y
) \

932 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

933 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

934 
	#i¶ess
(
x
, 
y
) \

935 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

936 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

937 
	#i¶es£quÆ
(
x
, 
y
) \

938 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

939 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

940 
	#i¶essgª©î
(
x
, 
y
) \

941 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

942 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x !__y; }))

	)

944 
	#isun‹dîed
(
x
, 
y
) \

945 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__u
 = (x); __ty≥of__ (
y
Ë
__v
 = (y); \

946 
__u
 !
__v
 && (__u !__u || __v !__v); }))

	)

951 #ifde‡
__USE_EXTERN_INLINES


952 
	~<bôs/m©hölöe.h
>

957 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

960 
	#_MdoubÀ_
 

	)

961 
	#__MATH_DECLARING_DOUBLE
 1

	)

962 
	#__MATH_DECLARING_FLOATN
 0

	)

963 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

964 
fun˘i⁄
 ## 
ªíå™t


	)

965 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

966 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

967 
	~<bôs/m©h-föôe.h
>

968 #unde‡
_MdoubÀ_


969 #unde‡
__MATH_DECLARING_DOUBLE


970 #unde‡
__MATH_DECLARING_FLOATN


971 #unde‡
__REDIRFROM_X


972 #unde‡
__REDIRTO_X


976 #ifde‡
__USE_ISOC99


979 
	#_MdoubÀ_
 

	)

980 
	#__MATH_DECLARING_DOUBLE
 0

	)

981 
	#__MATH_DECLARING_FLOATN
 0

	)

982 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

983 
fun˘i⁄
 ## 
f
 ## 
ªíå™t


	)

984 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

985 
__
 ## 
fun˘i⁄
 ## 
f
 ## 
ªíå™t
 ## 
_föôe


	)

986 
	~<bôs/m©h-föôe.h
>

987 #unde‡
_MdoubÀ_


988 #unde‡
__MATH_DECLARING_DOUBLE


989 #unde‡
__MATH_DECLARING_FLOATN


990 #unde‡
__REDIRFROM_X


991 #unde‡
__REDIRTO_X


994 #ifde‡
__MATH_DECLARE_LDOUBLE


995 
	#_MdoubÀ_
 

	)

996 
	#__MATH_DECLARING_DOUBLE
 0

	)

997 
	#__MATH_DECLARING_FLOATN
 0

	)

998 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

999 
fun˘i⁄
 ## 
l
 ## 
ªíå™t


	)

1000 #ifde‡
__NO_LONG_DOUBLE_MATH


1001 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1002 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1004 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1005 
__
 ## 
fun˘i⁄
 ## 
l
 ## 
ªíå™t
 ## 
_föôe


	)

1007 
	~<bôs/m©h-föôe.h
>

1008 #unde‡
_MdoubÀ_


1009 #unde‡
__MATH_DECLARING_DOUBLE


1010 #unde‡
__MATH_DECLARING_FLOATN


1011 #unde‡
__REDIRFROM_X


1012 #unde‡
__REDIRTO_X


1019 #i‡(
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)) \

1020 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1021 
	#_MdoubÀ_
 
_Flﬂt16


	)

1022 
	#__MATH_DECLARING_DOUBLE
 0

	)

1023 
	#__MATH_DECLARING_FLOATN
 1

	)

1024 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1025 
fun˘i⁄
 ## 
f16
 ## 
ªíå™t


	)

1026 #i‡
__HAVE_DISTINCT_FLOAT16


1027 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1028 
__
 ## 
fun˘i⁄
 ## 
f16
 ## 
ªíå™t
 ## 
_föôe


	)

1032 
	~<bôs/m©h-föôe.h
>

1033 #unde‡
_MdoubÀ_


1034 #unde‡
__MATH_DECLARING_DOUBLE


1035 #unde‡
__MATH_DECLARING_FLOATN


1036 #unde‡
__REDIRFROM_X


1037 #unde‡
__REDIRTO_X


1040 #i‡(
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)) \

1041 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1042 
	#_MdoubÀ_
 
_Flﬂt32


	)

1043 
	#__MATH_DECLARING_DOUBLE
 0

	)

1044 
	#__MATH_DECLARING_FLOATN
 1

	)

1045 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1046 
fun˘i⁄
 ## 
f32
 ## 
ªíå™t


	)

1047 #i‡
__HAVE_DISTINCT_FLOAT32


1048 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1049 
__
 ## 
fun˘i⁄
 ## 
f32
 ## 
ªíå™t
 ## 
_föôe


	)

1051 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1052 
__
 ## 
fun˘i⁄
 ## 
f
 ## 
ªíå™t
 ## 
_föôe


	)

1054 
	~<bôs/m©h-föôe.h
>

1055 #unde‡
_MdoubÀ_


1056 #unde‡
__MATH_DECLARING_DOUBLE


1057 #unde‡
__MATH_DECLARING_FLOATN


1058 #unde‡
__REDIRFROM_X


1059 #unde‡
__REDIRTO_X


1062 #i‡(
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)) \

1063 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1064 
	#_MdoubÀ_
 
_Flﬂt64


	)

1065 
	#__MATH_DECLARING_DOUBLE
 0

	)

1066 
	#__MATH_DECLARING_FLOATN
 1

	)

1067 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1068 
fun˘i⁄
 ## 
f64
 ## 
ªíå™t


	)

1069 #i‡
__HAVE_DISTINCT_FLOAT64


1070 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1071 
__
 ## 
fun˘i⁄
 ## 
f64
 ## 
ªíå™t
 ## 
_föôe


	)

1073 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1074 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1076 
	~<bôs/m©h-föôe.h
>

1077 #unde‡
_MdoubÀ_


1078 #unde‡
__MATH_DECLARING_DOUBLE


1079 #unde‡
__MATH_DECLARING_FLOATN


1080 #unde‡
__REDIRFROM_X


1081 #unde‡
__REDIRTO_X


1084 #i‡(
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)) \

1085 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1086 
	#_MdoubÀ_
 
_Flﬂt128


	)

1087 
	#__MATH_DECLARING_DOUBLE
 0

	)

1088 
	#__MATH_DECLARING_FLOATN
 1

	)

1089 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1090 
fun˘i⁄
 ## 
f128
 ## 
ªíå™t


	)

1091 #i‡
__HAVE_DISTINCT_FLOAT128


1092 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1093 
__
 ## 
fun˘i⁄
 ## 
f128
 ## 
ªíå™t
 ## 
_föôe


	)

1095 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1096 
__
 ## 
fun˘i⁄
 ## 
l
 ## 
ªíå™t
 ## 
_föôe


	)

1098 
	~<bôs/m©h-föôe.h
>

1099 #unde‡
_MdoubÀ_


1100 #unde‡
__MATH_DECLARING_DOUBLE


1101 #unde‡
__MATH_DECLARING_FLOATN


1102 #unde‡
__REDIRFROM_X


1103 #unde‡
__REDIRTO_X


1106 #i‡(
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)) \

1107 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1108 
	#_MdoubÀ_
 
_Flﬂt32x


	)

1109 
	#__MATH_DECLARING_DOUBLE
 0

	)

1110 
	#__MATH_DECLARING_FLOATN
 1

	)

1111 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1112 
fun˘i⁄
 ## 
f32x
 ## 
ªíå™t


	)

1113 #i‡
__HAVE_DISTINCT_FLOAT32X


1114 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1115 
__
 ## 
fun˘i⁄
 ## 
f32x
 ## 
ªíå™t
 ## 
_föôe


	)

1117 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1118 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1120 
	~<bôs/m©h-föôe.h
>

1121 #unde‡
_MdoubÀ_


1122 #unde‡
__MATH_DECLARING_DOUBLE


1123 #unde‡
__MATH_DECLARING_FLOATN


1124 #unde‡
__REDIRFROM_X


1125 #unde‡
__REDIRTO_X


1128 #i‡(
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)) \

1129 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1130 
	#_MdoubÀ_
 
_Flﬂt64x


	)

1131 
	#__MATH_DECLARING_DOUBLE
 0

	)

1132 
	#__MATH_DECLARING_FLOATN
 1

	)

1133 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1134 
fun˘i⁄
 ## 
f64x
 ## 
ªíå™t


	)

1135 #i‡
__HAVE_DISTINCT_FLOAT64X


1136 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1137 
__
 ## 
fun˘i⁄
 ## 
f64x
 ## 
ªíå™t
 ## 
_föôe


	)

1138 #ñi‡
__HAVE_FLOAT64X_LONG_DOUBLE


1139 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1140 
__
 ## 
fun˘i⁄
 ## 
l
 ## 
ªíå™t
 ## 
_föôe


	)

1142 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1143 
__
 ## 
fun˘i⁄
 ## 
f128
 ## 
ªíå™t
 ## 
_föôe


	)

1145 
	~<bôs/m©h-föôe.h
>

1146 #unde‡
_MdoubÀ_


1147 #unde‡
__MATH_DECLARING_DOUBLE


1148 #unde‡
__MATH_DECLARING_FLOATN


1149 #unde‡
__REDIRFROM_X


1150 #unde‡
__REDIRTO_X


1153 #i‡(
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)) \

1154 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1155 
	#_MdoubÀ_
 
_Flﬂt128x


	)

1156 
	#__MATH_DECLARING_DOUBLE
 0

	)

1157 
	#__MATH_DECLARING_FLOATN
 1

	)

1158 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1159 
fun˘i⁄
 ## 
f128x
 ## 
ªíå™t


	)

1160 #i‡
__HAVE_DISTINCT_FLOAT128X


1161 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1162 
__
 ## 
fun˘i⁄
 ## 
f128x
 ## 
ªíå™t
 ## 
_föôe


	)

1166 
	~<bôs/m©h-föôe.h
>

1167 #unde‡
_MdoubÀ_


1168 #unde‡
__MATH_DECLARING_DOUBLE


1169 #unde‡
__MATH_DECLARING_FLOATN


1170 #unde‡
__REDIRFROM_X


1171 #unde‡
__REDIRTO_X


1176 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

1179 #i‡
__FLT_EVAL_METHOD__
 == 2 || __FLT_EVAL_METHOD__ > 64

1180 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0L)

	)

1181 #ñi‡
__FLT_EVAL_METHOD__
 == 1 || __FLT_EVAL_METHOD__ > 32

1182 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0)

	)

1183 #ñi‡
__FLT_EVAL_METHOD__
 == 0 || __FLT_EVAL_METHOD__ == 32

1184 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0f)

	)

1186 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (y))

	)

1191 #i‡!
deföed
 
__˝lu•lus
 || (__˝lu•lu†< 201103L && !deföed 
__GNUC__
)

1192 
	#i£qsig
(
x
, 
y
) \

1193 
	`__MATH_TG
 (
	`__MATH_EVAL_FMT2
 (
x
, 
y
), 
__i£qsig
, ((x), (y)))

	)

1206 
ãm∂©e
<
ty≥«me
> 
__i£qsig_ty≥
;

1208 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1210 
	`__ˇŒ
 (
__x
, 
__y
Ë
	`throw
 ()

1212  
	`__i£qsigf
 (
__x
, 
__y
);

1216 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1218 
	`__ˇŒ
 (
__x
, 
__y
Ë
	`throw
 ()

1220  
	`__i£qsig
 (
__x
, 
__y
);

1224 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1226 
	`__ˇŒ
 (
__x
, 
__y
Ë
	`throw
 ()

1228 #i‚de‡
__NO_LONG_DOUBLE_MATH


1229  
	`__i£qsigl
 (
__x
, 
__y
);

1231  
	`__i£qsig
 (
__x
, 
__y
);

1236 #i‡
__HAVE_DISTINCT_FLOAT128


1237 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt128
>

1239 
	`__ˇŒ
 (
_Flﬂt128
 
__x
, _Flﬂt128 
__y
Ë
	`throw
 ()

1241  
	`__i£qsigf128
 (
__x
, 
__y
);

1246 
ãm∂©e
<
ty≥«me
 
_T1
,Åy≥«mê
_T2
>

1247 
ölöe
 

1248 
	`i£qsig
 (
_T1
 
__x
, 
_T2
 
__y
Ë
	`throw
 ()

1250 #i‡
__˝lu•lus
 >= 201103L

1251 
	`de˛ty≥
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1253 
	`__ty≥of
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1255  
__i£qsig_ty≥
<
_T3
>::
	`__ˇŒ
 (
__x
, 
__y
);

1258 
	}
}

1263 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	~<bôs/ty≥s/__FILE.h
>

37 
	~<bôs/ty≥s/FILE.h
>

39 
	#_STDIO_USES_IOSTREAM


	)

41 
	~<bôs/libio.h
>

43 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


44 #ifde‡
__GNUC__


45 #i‚de‡
_VA_LIST_DEFINED


46 
_G_va_li°
 
	tva_li°
;

47 
	#_VA_LIST_DEFINED


	)

50 
	~<°d¨g.h
>

54 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


55 #i‚de‡
__off_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__off_t
 
	toff_t
;

59 
__off64_t
 
	toff_t
;

61 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

69 #ifde‡
__USE_XOPEN2K8


70 #i‚de‡
__ssize_t_deföed


71 
__ssize_t
 
	tssize_t
;

72 
	#__ssize_t_deföed


	)

77 #i‚de‡
__USE_FILE_OFFSET64


78 
_G_Âos_t
 
	tÂos_t
;

80 
_G_Âos64_t
 
	tÂos_t
;

82 #ifde‡
__USE_LARGEFILE64


83 
_G_Âos64_t
 
	tÂos64_t
;

87 
	#_IOFBF
 0

	)

88 
	#_IOLBF
 1

	)

89 
	#_IONBF
 2

	)

93 #i‚de‡
BUFSIZ


94 
	#BUFSIZ
 
_IO_BUFSIZ


	)

100 #i‚de‡
EOF


101 
	#EOF
 (-1)

	)

107 
	#SEEK_SET
 0

	)

108 
	#SEEK_CUR
 1

	)

109 
	#SEEK_END
 2

	)

110 #ifde‡
__USE_GNU


111 
	#SEEK_DATA
 3

	)

112 
	#SEEK_HOLE
 4

	)

116 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


118 
	#P_tmpdú
 "/tmp"

	)

131 
	~<bôs/°dio_lim.h
>

135 
_IO_FILE
 *
°dö
;

136 
_IO_FILE
 *
°dout
;

137 
_IO_FILE
 *
°dîr
;

139 
	#°dö
 
°dö


	)

140 
	#°dout
 
°dout


	)

141 
	#°dîr
 
°dîr


	)

144 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

146 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

148 #ifde‡
__USE_ATFILE


150 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

151 c⁄° *
__√w
Ë
__THROW
;

158 #i‚de‡
__USE_FILE_OFFSET64


159 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

161 #ifde‡
__REDIRECT


162 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

164 
	#tmpfûe
 
tmpfûe64


	)

168 #ifde‡
__USE_LARGEFILE64


169 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

173 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

175 #ifde‡
__USE_MISC


178 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


190 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

191 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

199 
	`f˛o£
 (
FILE
 *
__°ªam
);

204 
	`fÊush
 (
FILE
 *
__°ªam
);

206 #ifde‡
__USE_MISC


213 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

216 #ifde‡
__USE_GNU


223 
	`f˛o£Æl
 ();

227 #i‚de‡
__USE_FILE_OFFSET64


232 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

233 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

238 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

239 c⁄° *
__ª°ri˘
 
__modes
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

242 #ifde‡
__REDIRECT


243 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

244 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

245 
__wur
;

246 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

247 c⁄° *
__ª°ri˘
 
__modes
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

249 
__wur
;

251 
	#f›í
 
f›í64


	)

252 
	#‰e›í
 
‰e›í64


	)

255 #ifde‡
__USE_LARGEFILE64


256 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

257 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

258 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

259 c⁄° *
__ª°ri˘
 
__modes
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

263 #ifdef 
__USE_POSIX


265 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

268 #ifdef 
__USE_GNU


271 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

272 c⁄° *
__ª°ri˘
 
__modes
,

273 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

276 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

278 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

279 
__THROW
 
__wur
;

284 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

290 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

294 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

295 
__modes
, 
size_t
 
__n
Ë
__THROW
;

297 #ifdef 
__USE_MISC


300 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

301 
size_t
 
__size
Ë
__THROW
;

304 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

312 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

313 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

318 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

320 
	$•rötf
 (*
__ª°ri˘
 
__s
,

321 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

327 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

328 
_G_va_li°
 
__¨g
);

333 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

335 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

336 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

338 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


340 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

341 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

342 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

344 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

345 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

346 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

349 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

352 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

353 
_G_va_li°
 
__¨g
)

354 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

355 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

356 c⁄° *
__ª°ri˘
 
__fmt
, ...)

357 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

358 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

359 c⁄° *
__ª°ri˘
 
__fmt
, ...)

360 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

363 #ifde‡
__USE_XOPEN2K8


365 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

366 
_G_va_li°
 
__¨g
)

367 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

368 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

369 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

377 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

378 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

383 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

385 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

386 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

388 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

389 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

390 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

391 #ifde‡
__REDIRECT


395 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

396 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

397 
__isoc99_fsˇnf
Ë
__wur
;

398 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

399 
__isoc99_sˇnf
Ë
__wur
;

400 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

401 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

402 
__isoc99_ssˇnf
);

404 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

405 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

406 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

407 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

408 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

409 
	#fsˇnf
 
__isoc99_fsˇnf


	)

410 
	#sˇnf
 
__isoc99_sˇnf


	)

411 
	#ssˇnf
 
__isoc99_ssˇnf


	)

415 #ifdef 
__USE_ISOC99


420 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

421 
_G_va_li°
 
__¨g
)

422 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

428 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

429 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

432 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

433 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

434 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

436 #i‡!
deföed
 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
vfsˇnf
,

444 (
FILE
 *
__ª°ri˘
 
__s
,

445 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

446 
__isoc99_vfsˇnf
)

447 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

448 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

449 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

450 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

451 
	`__REDIRECT_NTH
 (
vssˇnf
,

452 (c⁄° *
__ª°ri˘
 
__s
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
,

454 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

455 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

457 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

458 c⁄° *
__ª°ri˘
 
__f‹m©
,

459 
_G_va_li°
 
__¨g
Ë
__wur
;

460 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

461 
_G_va_li°
 
__¨g
Ë
__wur
;

462 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

463 c⁄° *
__ª°ri˘
 
__f‹m©
,

464 
_G_va_li°
 
__¨g
Ë
__THROW
;

465 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

466 
	#vsˇnf
 
__isoc99_vsˇnf


	)

467 
	#vssˇnf
 
__isoc99_vssˇnf


	)

477 
	`fgëc
 (
FILE
 *
__°ªam
);

478 
	`gëc
 (
FILE
 *
__°ªam
);

484 
	`gëch¨
 ();

488 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

490 #ifde‡
__USE_POSIX199506


495 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

496 
	`gëch¨_u∆ocked
 ();

499 #ifde‡
__USE_MISC


506 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

517 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

518 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

524 
	`putch¨
 (
__c
);

528 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

530 #ifde‡
__USE_MISC


537 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

540 #ifde‡
__USE_POSIX199506


545 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

546 
	`putch¨_u∆ocked
 (
__c
);

550 #i‡
deföed
 
__USE_MISC
 \

551 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

553 
	`gëw
 (
FILE
 *
__°ªam
);

556 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

564 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

565 
__wur
;

567 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

577 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

580 #ifde‡
__USE_GNU


587 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

588 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

592 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

603 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

604 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

605 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

606 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

607 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

608 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

617 
size_t
 *
__ª°ri˘
 
__n
,

618 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

626 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

632 
	`puts
 (c⁄° *
__s
);

639 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

646 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

647 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

652 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

653 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

655 #ifde‡
__USE_GNU


662 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
);

666 #ifde‡
__USE_MISC


673 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

674 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

676 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

684 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

689 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

694 
	`ªwöd
 (
FILE
 *
__°ªam
);

701 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


702 #i‚de‡
__USE_FILE_OFFSET64


707 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

712 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

714 #ifde‡
__REDIRECT


715 
	`__REDIRECT
 (
f£eko
,

716 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

717 
f£eko64
);

718 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

720 
	#f£eko
 
f£eko64


	)

721 
	#·ñlo
 
·ñlo64


	)

726 #i‚de‡
__USE_FILE_OFFSET64


731 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

736 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

738 #ifde‡
__REDIRECT


739 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

740 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

741 
	`__REDIRECT
 (
f£ços
,

742 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

744 
	#fgëpos
 
fgëpos64


	)

745 
	#f£ços
 
f£ços64


	)

749 #ifde‡
__USE_LARGEFILE64


750 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

751 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

753 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

757 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

759 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

761 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

763 #ifde‡
__USE_MISC


765 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

766 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

767 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

775 
	`≥º‹
 (c⁄° *
__s
);

781 
	~<bôs/sys_îæi°.h
>

784 #ifdef 
__USE_POSIX


786 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

789 #ifde‡
__USE_MISC


791 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

795 #ifde‡
__USE_POSIX2


800 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

806 
	`p˛o£
 (
FILE
 *
__°ªam
);

810 #ifdef 
__USE_POSIX


812 *
	$˘îmid
 (*
__s
Ë
__THROW
;

816 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


818 *
	`cu£rid
 (*
__s
);

822 #ifdef 
__USE_GNU


823 
ob°ack
;

826 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

827 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

828 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

829 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

830 c⁄° *
__ª°ri˘
 
__f‹m©
,

831 
_G_va_li°
 
__¨gs
)

832 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

836 #ifde‡
__USE_POSIX199506


840 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

844 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

847 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

850 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


853 
	~<bôs/gë›t_posix.h
>

858 #ifde‡
__USE_EXTERN_INLINES


859 
	~<bôs/°dio.h
>

861 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


862 
	~<bôs/°dio2.h
>

864 #ifde‡
__LDBL_COMPAT


865 
	~<bôs/°dio-ldbl.h
>

868 
__END_DECLS


	@/usr/include/tbb/blocked_range.h

21 #i‚de‡
__TBB_blocked_ønge_H


22 
	#__TBB_blocked_ønge_H


	)

24 
	~"tbb_°ddef.h
"

26 
«me•a˚
 
	gtbb
 {

39 
	gãm∂©e
<
ty≥«me
 
	gVÆue
>

40 ˛as†
	cblocked_ønge
 {

41 
	gpublic
:

45 
VÆue
 
	tc⁄°_ôî©‹
;

48 
	g°d
::
	tsize_t
 
	tsize_ty≥
;

52 
blocked_ønge
(Ë: 
my_íd
(), 
my_begö
() {}

55 
blocked_ønge
–
VÆue
 
begö_
, VÆuê
íd_
, 
size_ty≥
 
gøösize_
=1 ) :

56 
my_íd
(
íd_
), 
my_begö
(
begö_
), 
my_gøösize
(
gøösize_
)

58 
__TBB_ASSERT
–
my_gøösize
>0, "grainsize must beÖositive" );

62 
c⁄°_ôî©‹
 
begö
(Ëc⁄° { 
	gmy_begö
;}

65 
c⁄°_ôî©‹
 
íd
(Ëc⁄° { 
	gmy_íd
;}

69 
size_ty≥
 
size
() const {

70 
__TBB_ASSERT
–!(
íd
()<
begö
()), "size() unspecified ifÉnd()<begin()" );

71  
size_ty≥
(
my_íd
-
my_begö
);

75 
size_ty≥
 
gøösize
(Ëc⁄° { 
	gmy_gøösize
;}

82 
boﬁ
 
em±y
(Ëc⁄° { !(
	gmy_begö
<
	gmy_íd
);}

86 
boﬁ
 
is_divisibÀ
(Ëc⁄° { 
	gmy_gøösize
<
size
();}

91 
blocked_ønge
–blocked_ønge& 
r
, 
•lô
 ) :

92 
my_íd
(
r
.my_end),

93 
my_begö
(
do_•lô
(
r
, 
•lô
())),

94 
my_gøösize
(
r
.my_grainsize)

97 
__TBB_ASSERT
–!(
my_begö
 < 
r
.
my_íd
) && !(r.my_end < my_begin), "blocked_range has been split incorrectly" );

100 #i‡
__TBB_USE_PROPORTIONAL_SPLIT_IN_BLOCKED_RANGES


102 c⁄° 
boﬁ
 
	gis_•lôèbÀ_ö_¥›‹ti⁄
 = 
åue
;

107 
blocked_ønge
–blocked_ønge& 
r
, 
¥›‹ti⁄Æ_•lô
& 
¥›‹ti⁄
 ) :

108 
my_íd
(
r
.my_end),

109 
my_begö
(
do_•lô
(
r
, 
¥›‹ti⁄
)),

110 
my_gøösize
(
r
.my_grainsize)

113 
__TBB_ASSERT
–!(
my_begö
 < 
r
.
my_íd
) && !(r.my_end < my_begin), "blocked_range has been split incorrectly" );

117 
	g¥iv©e
:

119 
VÆue
 
my_íd
;

120 
VÆue
 
	gmy_begö
;

121 
size_ty≥
 
	gmy_gøösize
;

125 
VÆue
 
do_•lô
–
blocked_ønge
& 
r
, 
•lô
 )

127 
__TBB_ASSERT
–
r
.
is_divisibÀ
(), "cannot split blocked_rangeÅhat isÇot divisible" );

128 
VÆue
 
	gmiddÀ
 = 
r
.
my_begö
 + (r.
my_íd
 -Ñ.my_begin) / 2u;

129 
	gr
.
	gmy_íd
 = 
middÀ
;

130  
	gmiddÀ
;

133 #i‡
__TBB_USE_PROPORTIONAL_SPLIT_IN_BLOCKED_RANGES


134 
VÆue
 
do_•lô
–
blocked_ønge
& 
r
, 
¥›‹ti⁄Æ_•lô
& 
¥›‹ti⁄
 )

136 
__TBB_ASSERT
–
r
.
is_divisibÀ
(), "cannot split blocked_rangeÅhat isÇot divisible" );

144 
size_ty≥
 
	gright_∑π
 = size_ty≥((
r
.
size
()Ë* (
¥›‹ti⁄
.
right
())

145 / (
¥›‹ti⁄
.
À·
(Ë+Ör›‹ti⁄.
right
()) + 0.5f);

146  
	gr
.
	gmy_íd
 = 
VÆue
(
r
.
my_íd
 - 
right_∑π
);

150 
	gãm∂©e
<
ty≥«me
 
	gRowVÆue
,Åy≥«mê
	gCﬁVÆue
>

151 
‰õnd
 
˛ass
 
	gblocked_ønge2d
;

153 
	gãm∂©e
<
ty≥«me
 
	gRowVÆue
,Åy≥«mê
	gCﬁVÆue
,Åy≥«mê
	gPageVÆue
>

154 
‰õnd
 
˛ass
 
	gblocked_ønge3d
;

	@/usr/include/tbb/parallel_for.h

21 #i‚de‡
__TBB_∑øŒñ_f‹_H


22 
	#__TBB_∑øŒñ_f‹_H


	)

24 
	~<√w
>

25 
	~"èsk.h
"

26 
	~"∑πôi⁄î.h
"

27 
	~"blocked_ønge.h
"

28 
	~"tbb_ex˚±i⁄.h
"

30 
«me•a˚
 
	gtbb
 {

32 
«me•a˚
 
	göãrÁ˚9
 {

34 
«me•a˚
 
	göã∫Æ
 {

37 * 
Æloˇã_siblög
(
èsk
* 
°¨t_f‹_èsk
, 
size_t
 
byãs
);

41 
	gãm∂©e
<
ty≥«me
 
	gR™ge
,Åy≥«mê
	gBody
,Åy≥«mê
	gP¨tôi⁄î
>

42 ˛as†
	c°¨t_f‹
: 
public
 
èsk
 {

43 
R™ge
 
my_ønge
;

44 c⁄° 
Body
 
	gmy_body
;

45 
ty≥«me
 
	gP¨tôi⁄î
::
èsk_∑πôi⁄_ty≥
 
my_∑πôi⁄
;

46 
èsk
* 
execuã
(Ë
	g__TBB_ovîride
;

49 
nŸe_afföôy
–
afföôy_id
 
id
 ) 
	g__TBB_ovîride
 {

50 
	gmy_∑πôi⁄
.
nŸe_afföôy
–
id
 );

53 
	gpublic
:

55 
°¨t_f‹
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
, 
P¨tôi⁄î
& 
∑πôi⁄î
 ) :

56 
my_ønge
(
ønge
),

57 
my_body
(
body
),

58 
my_∑πôi⁄
(
∑πôi⁄î
)

63 
°¨t_f‹
–°¨t_f‹& 
∑ª¡_
, 
ty≥«me
 
P¨tôi⁄î
::
•lô_ty≥
& 
•lô_obj
) :

64 
my_ønge
(
∑ª¡_
.my_ønge, 
•lô_obj
),

65 
my_body
(
∑ª¡_
.my_body),

66 
my_∑πôi⁄
(
∑ª¡_
.my_∑πôi⁄, 
•lô_obj
)

68 
	gmy_∑πôi⁄
.
£t_afföôy
(*
this
);

72 
°¨t_f‹
–°¨t_f‹& 
∑ª¡_
, c⁄° 
R™ge
& 
r
, 
dïth_t
 
d
 ) :

73 
my_ønge
(
r
),

74 
my_body
(
∑ª¡_
.my_body),

75 
my_∑πôi⁄
(
∑ª¡_
.my_∑πôi⁄, 
•lô
())

77 
	gmy_∑πôi⁄
.
£t_afföôy
(*
this
);

78 
	gmy_∑πôi⁄
.
Æign_dïth
–
d
 );

80 
run
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
, 
P¨tôi⁄î
& 
∑πôi⁄î
 ) {

81 if–!
	gønge
.
em±y
() ) {

82 #i‡!
__TBB_TASK_GROUP_CONTEXT
 || 
TBB_JOIN_OUTER_TASK_GROUP


83 
	g°¨t_f‹
& 
	ga
 = *
√w
(
èsk
::
Æloˇã_roŸ
()Ë
°¨t_f‹
(
ønge
,
body
,
∑πôi⁄î
);

87 
èsk_group_c⁄ãxt
 
	gc⁄ãxt
;

88 
	g°¨t_f‹
& 
	ga
 = *
√w
(
èsk
::
Æloˇã_roŸ
(
c⁄ãxt
)Ë
°¨t_f‹
(
ønge
,
body
,
∑πôi⁄î
);

90 
	gèsk
::
•awn_roŸ_™d_waô
(
a
);

93 #i‡
__TBB_TASK_GROUP_CONTEXT


94 
run
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
, 
P¨tôi⁄î
& 
∑πôi⁄î
, 
èsk_group_c⁄ãxt
& 
c⁄ãxt
 ) {

95 if–!
	gønge
.
em±y
() ) {

96 
	g°¨t_f‹
& 
	ga
 = *
√w
(
èsk
::
Æloˇã_roŸ
(
c⁄ãxt
)Ë
°¨t_f‹
(
ønge
,
body
,
∑πôi⁄î
);

97 
	gèsk
::
•awn_roŸ_™d_waô
(
a
);

102 
run_body
–
R™ge
 &
r
 ) { 
my_body
(Ñ ); }

105 
of„r_w‹k
(
ty≥«me
 
P¨tôi⁄î
::
•lô_ty≥
& 
•lô_obj
) {

106 
•awn
–*
√w
–
Æloˇã_siblög
(
°©ic_ˇ°
<
èsk
*>(
this
), (
°¨t_f‹
)ËË°¨t_f‹(*this, 
•lô_obj
) );

109 
of„r_w‹k
(c⁄° 
R™ge
& 
r
, 
dïth_t
 
d
 = 0) {

110 
•awn
–*
√w
–
Æloˇã_siblög
(
°©ic_ˇ°
<
èsk
*>(
this
), (
°¨t_f‹
)ËË°¨t_f‹(*this, 
r
, 
d
) );

116 
ölöe
 * 
Æloˇã_siblög
(
èsk
* 
°¨t_f‹_èsk
, 
size_t
 
byãs
) {

117 
èsk
* 
	g∑ª¡_±r
 = 
√w
–
°¨t_f‹_èsk
->
Æloˇã_c⁄töu©i⁄
(ËË
Êag_èsk
();

118 
	g°¨t_f‹_èsk
->
£t_∑ª¡
(
∑ª¡_±r
);

119 
	g∑ª¡_±r
->
£t_ªf_cou¡
(2);

120  &
	g∑ª¡_±r
->
Æloˇã_chûd
().
Æloˇã
(
byãs
);

124 
	gãm∂©e
<
ty≥«me
 
	gR™ge
,Åy≥«mê
	gBody
,Åy≥«mê
	gP¨tôi⁄î
>

125 
èsk
* 
	g°¨t_f‹
<
	gR™ge
,
	gBody
,
	gP¨tôi⁄î
>::
execuã
() {

126 
my_∑πôi⁄
.
check_beög_°ﬁí
–*
this
 );

127 
	gmy_∑πôi⁄
.
execuã
(*
this
, 
my_ønge
);

128  
	gNULL
;

135 
«me•a˚
 
	göã∫Æ
 {

136 
usög
 
	göãrÁ˚9
::
öã∫Æ
::
°¨t_f‹
;

139 
	gãm∂©e
<
ty≥«me
 
	gFun˘i⁄
,Åy≥«mê
	gIndex
>

140 ˛as†
	c∑øŒñ_f‹_body
 : 
öã∫Æ
::
no_assign
 {

141 c⁄° 
Fun˘i⁄
 &
my_func
;

142 c⁄° 
Index
 
	gmy_begö
;

143 c⁄° 
Index
 
	gmy_°ï
;

144 
	gpublic
:

145 
∑øŒñ_f‹_body
–c⁄° 
Fun˘i⁄
& 
_func
, 
Index
& 
_begö
, Index& 
_°ï
 )

146 : 
my_func
(
_func
), 
my_begö
(
_begö
), 
my_°ï
(
_°ï
) {}

148 
›î©‹
()–c⁄° 
	gtbb
::
blocked_ønge
<
Index
>& 
r
 ) const {

150 
Index
 
b
 = 
r
.
begö
();

151 
Index
 
	ge
 = 
r
.
íd
();

152 
Index
 
	gms
 = 
my_°ï
;

153 
Index
 
	gk
 = 
my_begö
 + 
b
*
ms
;

155 #i‡
__INTEL_COMPILER


156 #¥agm®
ivdï


157 #i‡
__TBB_ASSERT_ON_VECTORIZATION_FAILURE


158 #¥agm®
ve˘‹
 
Æways
 
as£π


161  
Index
 
	gi
 = 
b
; i < 
	ge
; ++i, 
	gk
 +
ms
 ) {

162 
my_func
–
k
 );

184 
	gãm∂©e
<
ty≥«me
 
	gR™ge
,Åy≥«mê
	gBody
>

185 
	$∑øŒñ_f‹
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
 ) {

186 
öã∫Æ
::
°¨t_f‹
<
R™ge
,
Body
,c⁄° 
__TBB_DEFAULT_PARTITIONER
>::
	`run
(
ønge
,
body
,
	`__TBB_DEFAULT_PARTITIONER
());

187 
	}
}

191 
	gãm∂©e
<
ty≥«me
 
	gR™ge
,Åy≥«mê
	gBody
>

192 
	$∑øŒñ_f‹
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
, c⁄° 
sim∂e_∑πôi⁄î
& 
∑πôi⁄î
 ) {

193 
öã∫Æ
::
°¨t_f‹
<
R™ge
,
Body
,c⁄° 
sim∂e_∑πôi⁄î
>::
	`run
(
ønge
,
body
,
∑πôi⁄î
);

194 
	}
}

198 
	gãm∂©e
<
ty≥«me
 
	gR™ge
,Åy≥«mê
	gBody
>

199 
	$∑øŒñ_f‹
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
, c⁄° 
auto_∑πôi⁄î
& 
∑πôi⁄î
 ) {

200 
öã∫Æ
::
°¨t_f‹
<
R™ge
,
Body
,c⁄° 
auto_∑πôi⁄î
>::
	`run
(
ønge
,
body
,
∑πôi⁄î
);

201 
	}
}

205 
	gãm∂©e
<
ty≥«me
 
	gR™ge
,Åy≥«mê
	gBody
>

206 
	$∑øŒñ_f‹
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
, c⁄° 
°©ic_∑πôi⁄î
& 
∑πôi⁄î
 ) {

207 
öã∫Æ
::
°¨t_f‹
<
R™ge
,
Body
,c⁄° 
°©ic_∑πôi⁄î
>::
	`run
(
ønge
,
body
,
∑πôi⁄î
);

208 
	}
}

212 
	gãm∂©e
<
ty≥«me
 
	gR™ge
,Åy≥«mê
	gBody
>

213 
	$∑øŒñ_f‹
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
, 
afföôy_∑πôi⁄î
& 
∑πôi⁄î
 ) {

214 
öã∫Æ
::
°¨t_f‹
<
R™ge
,
Body
,
afföôy_∑πôi⁄î
>::
	`run
(
ønge
,
body
,
∑πôi⁄î
);

215 
	}
}

217 #i‡
__TBB_TASK_GROUP_CONTEXT


220 
	gãm∂©e
<
ty≥«me
 
	gR™ge
,Åy≥«mê
	gBody
>

221 
	$∑øŒñ_f‹
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
, 
èsk_group_c⁄ãxt
& 
c⁄ãxt
 ) {

222 
öã∫Æ
::
°¨t_f‹
<
R™ge
,
Body
,c⁄° 
__TBB_DEFAULT_PARTITIONER
>::
	`run
(
ønge
, 
body
, 
	`__TBB_DEFAULT_PARTITIONER
(), 
c⁄ãxt
);

223 
	}
}

227 
	gãm∂©e
<
ty≥«me
 
	gR™ge
,Åy≥«mê
	gBody
>

228 
	$∑øŒñ_f‹
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
, c⁄° 
sim∂e_∑πôi⁄î
& 
∑πôi⁄î
, 
èsk_group_c⁄ãxt
& 
c⁄ãxt
 ) {

229 
öã∫Æ
::
°¨t_f‹
<
R™ge
,
Body
,c⁄° 
sim∂e_∑πôi⁄î
>::
	`run
(
ønge
, 
body
, 
∑πôi⁄î
, 
c⁄ãxt
);

230 
	}
}

234 
	gãm∂©e
<
ty≥«me
 
	gR™ge
,Åy≥«mê
	gBody
>

235 
	$∑øŒñ_f‹
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
, c⁄° 
auto_∑πôi⁄î
& 
∑πôi⁄î
, 
èsk_group_c⁄ãxt
& 
c⁄ãxt
 ) {

236 
öã∫Æ
::
°¨t_f‹
<
R™ge
,
Body
,c⁄° 
auto_∑πôi⁄î
>::
	`run
(
ønge
, 
body
, 
∑πôi⁄î
, 
c⁄ãxt
);

237 
	}
}

241 
	gãm∂©e
<
ty≥«me
 
	gR™ge
,Åy≥«mê
	gBody
>

242 
	$∑øŒñ_f‹
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
, c⁄° 
°©ic_∑πôi⁄î
& 
∑πôi⁄î
, 
èsk_group_c⁄ãxt
& 
c⁄ãxt
 ) {

243 
öã∫Æ
::
°¨t_f‹
<
R™ge
,
Body
,c⁄° 
°©ic_∑πôi⁄î
>::
	`run
(
ønge
, 
body
, 
∑πôi⁄î
, 
c⁄ãxt
);

244 
	}
}

248 
	gãm∂©e
<
ty≥«me
 
	gR™ge
,Åy≥«mê
	gBody
>

249 
	$∑øŒñ_f‹
–c⁄° 
R™ge
& 
ønge
, c⁄° 
Body
& 
body
, 
afföôy_∑πôi⁄î
& 
∑πôi⁄î
, 
èsk_group_c⁄ãxt
& 
c⁄ãxt
 ) {

250 
öã∫Æ
::
°¨t_f‹
<
R™ge
,
Body
,
afföôy_∑πôi⁄î
>::
	`run
(
ønge
,
body
,
∑πôi⁄î
, 
c⁄ãxt
);

251 
	}
}

255 
«me•a˚
 
	g°ri˘_µl
 {

259 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
,Åy≥«mê
	gP¨tôi⁄î
>

260 
∑øŒñ_f‹_im∂
(
Index
 
fú°
, Index 
œ°
, Index 
°ï
, c⁄° 
Fun˘i⁄
& 
f
, 
P¨tôi⁄î
& 
∑πôi⁄î
) {

261 i‡(
	g°ï
 <= 0 )

262 
öã∫Æ
::
throw_ex˚±i⁄
(öã∫Æ::
eid_n⁄posôive_°ï
);

263 i‡(
	gœ°
 > 
	gfú°
) {

265 
Index
 
	gíd
 = (
œ°
 - 
fú°
 - Index(1)Ë/ 
°ï
 + Index(1);

266 
	gtbb
::
blocked_ønge
<
Index
> 
ønge
(
°©ic_ˇ°
<Index>(0), 
íd
);

267 
	göã∫Æ
::
∑øŒñ_f‹_body
<
Fun˘i⁄
, 
	gIndex
> 
body
(
f
, 
fú°
, 
°ï
);

268 
	gtbb
::
∑øŒñ_f‹
(
ønge
, 
body
, 
∑πôi⁄î
);

273 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

274 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, Index 
°ï
, c⁄° 
Fun˘i⁄
& 
f
) {

275 
	g∑øŒñ_f‹_im∂
<
	gIndex
,
	gFun˘i⁄
,c⁄° 
	gauto_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°ï
, 
	gf
, 
auto_∑πôi⁄î
());

278 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

279 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, Index 
°ï
, c⁄° 
Fun˘i⁄
& 
f
, c⁄° 
sim∂e_∑πôi⁄î
& 
∑πôi⁄î
) {

280 
	g∑øŒñ_f‹_im∂
<
	gIndex
,
	gFun˘i⁄
,c⁄° 
	gsim∂e_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°ï
, 
	gf
, 
	g∑πôi⁄î
);

283 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

284 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, Index 
°ï
, c⁄° 
Fun˘i⁄
& 
f
, c⁄° 
auto_∑πôi⁄î
& 
∑πôi⁄î
) {

285 
	g∑øŒñ_f‹_im∂
<
	gIndex
,
	gFun˘i⁄
,c⁄° 
	gauto_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°ï
, 
	gf
, 
	g∑πôi⁄î
);

288 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

289 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, Index 
°ï
, c⁄° 
Fun˘i⁄
& 
f
, c⁄° 
°©ic_∑πôi⁄î
& 
∑πôi⁄î
) {

290 
	g∑øŒñ_f‹_im∂
<
	gIndex
,
	gFun˘i⁄
,c⁄° 
	g°©ic_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°ï
, 
	gf
, 
	g∑πôi⁄î
);

293 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

294 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, Index 
°ï
, c⁄° 
Fun˘i⁄
& 
f
, 
afföôy_∑πôi⁄î
& 
∑πôi⁄î
) {

295 
∑øŒñ_f‹_im∂
(
fú°
, 
œ°
, 
°ï
, 
f
, 
∑πôi⁄î
);

299 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

300 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, c⁄° 
Fun˘i⁄
& 
f
) {

301 
	g∑øŒñ_f‹_im∂
<
	gIndex
,
	gFun˘i⁄
,c⁄° 
	gauto_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°©ic_ˇ°
<Index>(1), 
	gf
, 
auto_∑πôi⁄î
());

304 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

305 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, c⁄° 
Fun˘i⁄
& 
f
, c⁄° 
sim∂e_∑πôi⁄î
& 
∑πôi⁄î
) {

306 
	g∑øŒñ_f‹_im∂
<
	gIndex
,
	gFun˘i⁄
,c⁄° 
	gsim∂e_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°©ic_ˇ°
<Index>(1), 
	gf
, 
	g∑πôi⁄î
);

309 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

310 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, c⁄° 
Fun˘i⁄
& 
f
, c⁄° 
auto_∑πôi⁄î
& 
∑πôi⁄î
) {

311 
	g∑øŒñ_f‹_im∂
<
	gIndex
,
	gFun˘i⁄
,c⁄° 
	gauto_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°©ic_ˇ°
<Index>(1), 
	gf
, 
	g∑πôi⁄î
);

314 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

315 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, c⁄° 
Fun˘i⁄
& 
f
, c⁄° 
°©ic_∑πôi⁄î
& 
∑πôi⁄î
) {

316 
	g∑øŒñ_f‹_im∂
<
	gIndex
,
	gFun˘i⁄
,c⁄° 
	g°©ic_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°©ic_ˇ°
<Index>(1), 
	gf
, 
	g∑πôi⁄î
);

319 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

320 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, c⁄° 
Fun˘i⁄
& 
f
, 
afföôy_∑πôi⁄î
& 
∑πôi⁄î
) {

321 
∑øŒñ_f‹_im∂
(
fú°
, 
œ°
, 
°©ic_ˇ°
<
Index
>(1), 
f
, 
∑πôi⁄î
);

324 #i‡
__TBB_TASK_GROUP_CONTEXT


326 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
,Åy≥«mê
	gP¨tôi⁄î
>

327 
∑øŒñ_f‹_im∂
(
Index
 
fú°
, Index 
œ°
, Index 
°ï
, c⁄° 
Fun˘i⁄
& 
f
, 
P¨tôi⁄î
& 
∑πôi⁄î
, 
tbb
::
èsk_group_c⁄ãxt
 &
c⁄ãxt
) {

328 i‡(
°ï
 <= 0 )

329 
öã∫Æ
::
throw_ex˚±i⁄
(öã∫Æ::
eid_n⁄posôive_°ï
);

330 i‡(
	gœ°
 > 
	gfú°
) {

332 
Index
 
	gíd
 = (
œ°
 - 
fú°
 - Index(1)Ë/ 
°ï
 + Index(1);

333 
	gtbb
::
blocked_ønge
<
Index
> 
ønge
(
°©ic_ˇ°
<Index>(0), 
íd
);

334 
	göã∫Æ
::
∑øŒñ_f‹_body
<
Fun˘i⁄
, 
	gIndex
> 
body
(
f
, 
fú°
, 
°ï
);

335 
	gtbb
::
∑øŒñ_f‹
(
ønge
, 
body
, 
∑πôi⁄î
, 
c⁄ãxt
);

340 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

341 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, Index 
°ï
, c⁄° 
Fun˘i⁄
& 
f
, 
tbb
::
èsk_group_c⁄ãxt
 &
c⁄ãxt
) {

342 
∑øŒñ_f‹_im∂
<
Index
,
	gFun˘i⁄
,c⁄° 
	gauto_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°ï
, 
	gf
, 
auto_∑πôi⁄î
(), 
	gc⁄ãxt
);

345 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

346 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, Index 
°ï
, c⁄° 
Fun˘i⁄
& 
f
, c⁄° 
sim∂e_∑πôi⁄î
& 
∑πôi⁄î
, 
tbb
::
èsk_group_c⁄ãxt
 &
c⁄ãxt
) {

347 
∑øŒñ_f‹_im∂
<
Index
,
	gFun˘i⁄
,c⁄° 
	gsim∂e_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°ï
, 
	gf
, 
	g∑πôi⁄î
, 
	gc⁄ãxt
);

350 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

351 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, Index 
°ï
, c⁄° 
Fun˘i⁄
& 
f
, c⁄° 
auto_∑πôi⁄î
& 
∑πôi⁄î
, 
tbb
::
èsk_group_c⁄ãxt
 &
c⁄ãxt
) {

352 
∑øŒñ_f‹_im∂
<
Index
,
	gFun˘i⁄
,c⁄° 
	gauto_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°ï
, 
	gf
, 
	g∑πôi⁄î
, 
	gc⁄ãxt
);

355 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

356 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, Index 
°ï
, c⁄° 
Fun˘i⁄
& 
f
, c⁄° 
°©ic_∑πôi⁄î
& 
∑πôi⁄î
, 
tbb
::
èsk_group_c⁄ãxt
 &
c⁄ãxt
) {

357 
∑øŒñ_f‹_im∂
<
Index
,
	gFun˘i⁄
,c⁄° 
	g°©ic_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°ï
, 
	gf
, 
	g∑πôi⁄î
, 
	gc⁄ãxt
);

360 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

361 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, Index 
°ï
, c⁄° 
Fun˘i⁄
& 
f
, 
afföôy_∑πôi⁄î
& 
∑πôi⁄î
, 
tbb
::
èsk_group_c⁄ãxt
 &
c⁄ãxt
) {

362 
∑øŒñ_f‹_im∂
(
fú°
, 
œ°
, 
°ï
, 
f
, 
∑πôi⁄î
, 
c⁄ãxt
);

367 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

368 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, c⁄° 
Fun˘i⁄
& 
f
, 
tbb
::
èsk_group_c⁄ãxt
 &
c⁄ãxt
) {

369 
∑øŒñ_f‹_im∂
<
Index
,
	gFun˘i⁄
,c⁄° 
	gauto_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°©ic_ˇ°
<
	gIndex
>(1), 
	gf
, 
auto_∑πôi⁄î
(), 
	gc⁄ãxt
);

372 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

373 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, c⁄° 
Fun˘i⁄
& 
f
, c⁄° 
sim∂e_∑πôi⁄î
& 
∑πôi⁄î
, 
tbb
::
èsk_group_c⁄ãxt
 &
c⁄ãxt
) {

374 
∑øŒñ_f‹_im∂
<
Index
,
	gFun˘i⁄
,c⁄° 
	gsim∂e_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°©ic_ˇ°
<
	gIndex
>(1), 
	gf
, 
	g∑πôi⁄î
, 
	gc⁄ãxt
);

377 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

378 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, c⁄° 
Fun˘i⁄
& 
f
, c⁄° 
auto_∑πôi⁄î
& 
∑πôi⁄î
, 
tbb
::
èsk_group_c⁄ãxt
 &
c⁄ãxt
) {

379 
∑øŒñ_f‹_im∂
<
Index
,
	gFun˘i⁄
,c⁄° 
	gauto_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°©ic_ˇ°
<
	gIndex
>(1), 
	gf
, 
	g∑πôi⁄î
, 
	gc⁄ãxt
);

382 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

383 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, c⁄° 
Fun˘i⁄
& 
f
, c⁄° 
°©ic_∑πôi⁄î
& 
∑πôi⁄î
, 
tbb
::
èsk_group_c⁄ãxt
 &
c⁄ãxt
) {

384 
∑øŒñ_f‹_im∂
<
Index
,
	gFun˘i⁄
,c⁄° 
	g°©ic_∑πôi⁄î
>(
	gfú°
, 
	gœ°
, 
	g°©ic_ˇ°
<
	gIndex
>(1), 
	gf
, 
	g∑πôi⁄î
, 
	gc⁄ãxt
);

387 
	gãm∂©e
 <
ty≥«me
 
	gIndex
,Åy≥«mê
	gFun˘i⁄
>

388 
∑øŒñ_f‹
(
Index
 
fú°
, Index 
œ°
, c⁄° 
Fun˘i⁄
& 
f
, 
afföôy_∑πôi⁄î
& 
∑πôi⁄î
, 
tbb
::
èsk_group_c⁄ãxt
 &
c⁄ãxt
) {

389 
∑øŒñ_f‹_im∂
(
fú°
, 
œ°
, 
°©ic_ˇ°
<
Index
>(1), 
f
, 
∑πôi⁄î
, 
c⁄ãxt
);

397 
usög
 
	g°ri˘_µl
::
∑øŒñ_f‹
;

401 #i‡
TBB_PREVIEW_SERIAL_SUBSET


402 
	#__TBB_NORMAL_EXECUTION


	)

403 
	~"../£rül/tbb/∑øŒñ_f‹.h
"

404 #unde‡
__TBB_NORMAL_EXECUTION


	@/usr/include/tbb/tbb.h

21 #i‚de‡
__TBB_tbb_H


22 
	#__TBB_tbb_H


	)

32 #i‡
TBB_PREVIEW_AGGREGATOR


33 
	~"aggªg©‹.h
"

35 
	~"Æig√d_•a˚.h
"

36 
	~"©omic.h
"

37 
	~"blocked_ønge.h
"

38 
	~"blocked_ønge2d.h
"

39 
	~"blocked_ønge3d.h
"

40 
	~"ˇche_Æig√d_Æloˇt‹.h
"

41 
	~"comböabÀ.h
"

42 
	~"c⁄cuºít_hash_m≠.h
"

43 #i‡
TBB_PREVIEW_CONCURRENT_LRU_CACHE


44 
	~"c⁄cuºít_Ãu_ˇche.h
"

46 
	~"c⁄cuºít_¥i‹ôy_queue.h
"

47 
	~"c⁄cuºít_queue.h
"

48 
	~"c⁄cuºít_un‹dîed_m≠.h
"

49 
	~"c⁄cuºít_un‹dîed_£t.h
"

50 
	~"c⁄cuºít_ve˘‹.h
"

51 
	~"¸ôiˇl_£˘i⁄.h
"

52 
	~"íumîabÀ_thªad_•ecific.h
"

53 
	~"Êow_gøph.h
"

54 #i‡
TBB_PREVIEW_GLOBAL_CONTROL


55 
	~"globÆ_c⁄åﬁ.h
"

57 
	~"muãx.h
"

58 
	~"nuŒ_muãx.h
"

59 
	~"nuŒ_rw_muãx.h
"

60 
	~"∑øŒñ_do.h
"

61 
	~"∑øŒñ_f‹.h
"

62 
	~"∑øŒñ_f‹_óch.h
"

63 
	~"∑øŒñ_övoke.h
"

64 
	~"∑øŒñ_ªdu˚.h
"

65 
	~"∑øŒñ_sˇn.h
"

66 
	~"∑øŒñ_s‹t.h
"

67 
	~"∑πôi⁄î.h
"

68 
	~"pùñöe.h
"

69 
	~"queuög_muãx.h
"

70 
	~"queuög_rw_muãx.h
"

71 
	~"ªadî_wrôî_lock.h
"

72 
	~"ªcursive_muãx.h
"

73 
	~"•ö_muãx.h
"

74 
	~"•ö_rw_muãx.h
"

75 
	~"èsk.h
"

76 
	~"èsk_¨ía.h
"

77 
	~"èsk_group.h
"

78 
	~"èsk_scheduÀr_öô.h
"

79 
	~"èsk_scheduÀr_ob£rvî.h
"

80 
	~"tbb_Æloˇt‹.h
"

81 
	~"tbb_ex˚±i⁄.h
"

82 
	~"tbb_thªad.h
"

83 
	~"tick_cou¡.h
"

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

119 #unde‡
__USE_ISOC11


120 #unde‡
__USE_ISOC99


121 #unde‡
__USE_ISOC95


122 #unde‡
__USE_ISOCXX11


123 #unde‡
__USE_POSIX


124 #unde‡
__USE_POSIX2


125 #unde‡
__USE_POSIX199309


126 #unde‡
__USE_POSIX199506


127 #unde‡
__USE_XOPEN


128 #unde‡
__USE_XOPEN_EXTENDED


129 #unde‡
__USE_UNIX98


130 #unde‡
__USE_XOPEN2K


131 #unde‡
__USE_XOPEN2KXSI


132 #unde‡
__USE_XOPEN2K8


133 #unde‡
__USE_XOPEN2K8XSI


134 #unde‡
__USE_LARGEFILE


135 #unde‡
__USE_LARGEFILE64


136 #unde‡
__USE_FILE_OFFSET64


137 #unde‡
__USE_MISC


138 #unde‡
__USE_ATFILE


139 #unde‡
__USE_GNU


140 #unde‡
__USE_FORTIFY_LEVEL


141 #unde‡
__KERNEL_STRICT_NAMES


142 #unde‡
__GLIBC_USE_DEPRECATED_GETS


146 #i‚de‡
_LOOSE_KERNEL_NAMES


147 
	#__KERNEL_STRICT_NAMES


	)

157 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


158 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

159 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

161 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

168 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


169 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

170 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

172 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

176 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

182 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

183 && !
deföed
 
	g_DEFAULT_SOURCE


185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

190 #ifde‡
_GNU_SOURCE


191 #unde‡
_ISOC95_SOURCE


192 
	#_ISOC95_SOURCE
 1

	)

193 #unde‡
_ISOC99_SOURCE


194 
	#_ISOC99_SOURCE
 1

	)

195 #unde‡
_ISOC11_SOURCE


196 
	#_ISOC11_SOURCE
 1

	)

197 #unde‡
_POSIX_SOURCE


198 
	#_POSIX_SOURCE
 1

	)

199 #unde‡
_POSIX_C_SOURCE


200 
	#_POSIX_C_SOURCE
 200809L

	)

201 #unde‡
_XOPEN_SOURCE


202 
	#_XOPEN_SOURCE
 700

	)

203 #unde‡
_XOPEN_SOURCE_EXTENDED


204 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

205 #unde‡
_LARGEFILE64_SOURCE


206 
	#_LARGEFILE64_SOURCE
 1

	)

207 #unde‡
_DEFAULT_SOURCE


208 
	#_DEFAULT_SOURCE
 1

	)

209 #unde‡
_ATFILE_SOURCE


210 
	#_ATFILE_SOURCE
 1

	)

215 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

216 || (!
deföed
 
	g__STRICT_ANSI__
 \

217 && !
deföed
 
	g_ISOC99_SOURCE
 \

218 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

219 && !
deföed
 
	g_XOPEN_SOURCE
))

220 #unde‡
_DEFAULT_SOURCE


221 
	#_DEFAULT_SOURCE
 1

	)

225 #i‡(
deföed
 
_ISOC11_SOURCE
 \

226 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

227 
	#__USE_ISOC11
 1

	)

231 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

232 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

233 
	#__USE_ISOC99
 1

	)

237 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

238 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

239 
	#__USE_ISOC95
 1

	)

242 #ifde‡
__˝lu•lus


244 #i‡
__˝lu•lus
 >= 201703L

245 
	#__USE_ISOC11
 1

	)

249 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


250 
	#__USE_ISOCXX11
 1

	)

251 
	#__USE_ISOC99
 1

	)

258 #ifde‡
_DEFAULT_SOURCE


259 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


260 
	#__USE_POSIX_IMPLICITLY
 1

	)

262 #unde‡
_POSIX_SOURCE


263 
	#_POSIX_SOURCE
 1

	)

264 #unde‡
_POSIX_C_SOURCE


265 
	#_POSIX_C_SOURCE
 200809L

	)

268 #i‡((!
deföed
 
__STRICT_ANSI__
 \

269 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

270 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

271 
	#_POSIX_SOURCE
 1

	)

272 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

273 
	#_POSIX_C_SOURCE
 2

	)

274 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

275 
	#_POSIX_C_SOURCE
 199506L

	)

276 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

277 
	#_POSIX_C_SOURCE
 200112L

	)

279 
	#_POSIX_C_SOURCE
 200809L

	)

281 
	#__USE_POSIX_IMPLICITLY
 1

	)

290 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

291 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

292 
	#_POSIX_SOURCE
 1

	)

293 #unde‡
_POSIX_C_SOURCE


294 
	#_POSIX_C_SOURCE
 199506L

	)

297 #i‡(
deföed
 
_POSIX_SOURCE
 \

298 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

299 || 
deföed
 
_XOPEN_SOURCE
)

300 
	#__USE_POSIX
 1

	)

303 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


304 
	#__USE_POSIX2
 1

	)

307 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

308 
	#__USE_POSIX199309
 1

	)

311 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

312 
	#__USE_POSIX199506
 1

	)

315 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

316 
	#__USE_XOPEN2K
 1

	)

317 #unde‡
__USE_ISOC95


318 
	#__USE_ISOC95
 1

	)

319 #unde‡
__USE_ISOC99


320 
	#__USE_ISOC99
 1

	)

323 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

324 
	#__USE_XOPEN2K8
 1

	)

325 #unde‡
_ATFILE_SOURCE


326 
	#_ATFILE_SOURCE
 1

	)

329 #ifdef 
_XOPEN_SOURCE


330 
	#__USE_XOPEN
 1

	)

331 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

332 
	#__USE_XOPEN_EXTENDED
 1

	)

333 
	#__USE_UNIX98
 1

	)

334 #unde‡
_LARGEFILE_SOURCE


335 
	#_LARGEFILE_SOURCE
 1

	)

336 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

337 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

338 
	#__USE_XOPEN2K8
 1

	)

339 
	#__USE_XOPEN2K8XSI
 1

	)

341 
	#__USE_XOPEN2K
 1

	)

342 
	#__USE_XOPEN2KXSI
 1

	)

343 #unde‡
__USE_ISOC95


344 
	#__USE_ISOC95
 1

	)

345 #unde‡
__USE_ISOC99


346 
	#__USE_ISOC99
 1

	)

349 #ifde‡
_XOPEN_SOURCE_EXTENDED


350 
	#__USE_XOPEN_EXTENDED
 1

	)

355 #ifde‡
_LARGEFILE_SOURCE


356 
	#__USE_LARGEFILE
 1

	)

359 #ifde‡
_LARGEFILE64_SOURCE


360 
	#__USE_LARGEFILE64
 1

	)

363 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

364 
	#__USE_FILE_OFFSET64
 1

	)

367 #i‡
deföed
 
_DEFAULT_SOURCE


368 
	#__USE_MISC
 1

	)

371 #ifdef 
_ATFILE_SOURCE


372 
	#__USE_ATFILE
 1

	)

375 #ifdef 
_GNU_SOURCE


376 
	#__USE_GNU
 1

	)

379 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

380 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

381 #i‡
_FORTIFY_SOURCE
 > 1

382 
	#__USE_FORTIFY_LEVEL
 2

	)

384 
	#__USE_FORTIFY_LEVEL
 1

	)

387 
	#__USE_FORTIFY_LEVEL
 0

	)

394 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


395 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

397 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

402 
	~<°dc-¥edef.h
>

410 #unde‡
__GNU_LIBRARY__


411 
	#__GNU_LIBRARY__
 6

	)

415 
	#__GLIBC__
 2

	)

416 
	#__GLIBC_MINOR__
 27

	)

418 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

419 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

422 #i‚de‡
__ASSEMBLER__


423 #i‚de‡
_SYS_CDEFS_H


424 
	~<sys/cdefs.h
>

429 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


430 
	#__USE_LARGEFILE
 1

	)

431 
	#__USE_LARGEFILE64
 1

	)

437 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

438 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

439 && 
deföed
 
	g__exã∫_ölöe


440 
	#__USE_EXTERN_INLINES
 1

	)

448 
	~<gnu/°ubs.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

61 
	#__STDC_NO_THREADS__
 1

	)

	@
1
.
1
/usr/include
17
350
src/ffttools.hpp
src/fhog.cpp
src/fhog.hpp
src/kcftracker.cpp
src/kcftracker.hpp
src/labdata.hpp
src/recttools.hpp
src/runtracker.cpp
src/tracker.h
/usr/include/dirent.h
/usr/include/math.h
/usr/include/stdio.h
/usr/include/tbb/blocked_range.h
/usr/include/tbb/parallel_for.h
/usr/include/tbb/tbb.h
/usr/include/features.h
/usr/include/stdc-predef.h
